

///////////////////////////////////////////////////////
TODO
///////////////////////////////////////////////////////


Check that htaccess security is enabled by doing an http and https call to /vars/access_test.dat to see if the data is readable.


Add IFTTT support (alexa / google home / whatever supported devices).


Standalone mode not changing corresponding exchange when pairing switched in IE (windows)


No audio alert in FF (windows)


Investigate unchecking standalone mode AFTER page reload...may be messing up the "update assets" page field for BTC.


Code review ALL functions.


Add setting to enable access stats modal, maybe include an optional password setting to require login to view it in the UI if password is set. Store access data in flat file / json format (so mulitiple values can be read back into the app before updating, then updated values saved back in json overwriting previously saved values). Last 50 unique ip addresses, showing ip address's last user agent / last visit time / total visits count. Drop any over 50 ip addresses off the list based on oldest timestamps. Store visitor ip address data (user agent, etc) in an array key based off ip address (json format).


Password notes: https://www.php.net/manual/en/faq.passwords.php


Add Google and Microsoft translate API as options to translate the portfolio interface and price alerts.


For scalable chart data, maybe run once daily during cron runtimes creating 1 hour (or greater) time interval chart data stores, using timestamp info in the default chart data store. Then use those for the initial chart loads if the chart data is more than 3 months worth (or whatever time period).


Create chart interval function that divides the desired chart timeline period by the number of maximum data points the chart should ever load, to get the data point time interval, then caches the corresponding timestamped data point intervals into an updated chart for that time period every 24 hours. So we'd have like 6 / 12 / 18 month charts (as examples).


See if exchange API data arrays can be manipulated slightly to build a reusable module for every exchange's API calls.


Add google home support via direct connect on same network, OR via IFTTT (whichever is most feasible).


SQL-based accounts for storing configuration settings per-user (including setting up new assets available at supported exchanges), BUT !NEVER! STORES PORTFOLIO DATA (FOR PRIVACY / SECURITY-SAKE).


When sql host config has been set in config.php, BUT DATABASE SETUP HAS NOT RUN YET, have the UI require entering the sql user password to initiate database setup (for security)


Maintain sql-based config as completely separate module(s) from the file-based config (config.php), except for the sql host connection / authentication details (put those at the top of the config.php configurations).


Add header login nav like prototype for zilliqa block explorer (use the developed account system structure too).


Add an alert bell icon in upcoming header login nav, and have alerts make it red and be a drop-down info bubble clicking it, rather than alerts printed in the footer.


2-way encryption option (unlocked with 6 digit PIN) for storing coin amounts (IN COOKIES ONLY, NO DATABASE STORAGE !EVER!), with "quick lock" to quickly re-hide portfolio data (staying hidden persists on page load / reload as well with a cookie).


Add feature to restore chart data from the zip archive backups (with admin authentication ONLY). Chart restore by prepending, so any existing data remains, BUT only if timestamp is newer than newest backups timestamp. Trigger restore from newest backups folder backup by placing a blank file named RESTORE_CHARTS in the que directory.


Stats in UI using chart data (if available), to show and compare spot / volume percent changes over an end-user-defined time period for a number of assets (example: BTC / LTC / ETH / XMR spot price percentage changes / 24hr volume percentage changes from April 6th 2019 to November 22nd 2019). Shows trends on which assets are performing better for a certain time period.


Add chart sorting by crypto and usd price / volume percentage change over 1 hour / 1 day / 1 week / 1 month / 90 days / 6 months / 1 year.


Add market stats summaries from chart data, like pie charts for exchange volume on certain pairs, etc.


RESTFUL API system for requesting asset attributes (USD spot price / vol , etc)


Simple trading bot, to run from cron / cli (with SQL-based admin authentication / web UI for configuration)


///////////////////////////////////////////////////////
MAYBE
///////////////////////////////////////////////////////


Consider error log alerts if system load is over 2, or free memory goes under 25 megabytes?


Alerts if NOT admin ip address visiting (admin ip stored in config setting)?


See if at all feasible to fully modularize mining calculators to be added via config settings?


Using primary chart data files as the source, dynamically create and cache extra chart data files for 1week / 1month / 3month / 6month / 1year / 2year / 4year charts (every hour?), using different minimum time intervals, to improve scaling UI integration (UI load times, as more chart data is collected)?


Add security nonce to thwart CSRF attacks on cookie portfolio data / SQL-based (authenticated) admin pages?


Look into graceful 'loading...' placeholder until page is fully loaded?










############################################################################################################################
TO-DO NOTES
############################################################################################################################
Try sticking with small infrastructure changes, and breaking up large changes into small milestones. 
Then plenty of time is spent on UX / testing / logging / debugging.
Always test in a WebKit-based browser [Epiphany|Safari], Firefox, and Chromium
Password notes: https://www.php.net/manual/en/faq.passwords.php
############################################################################################################################
############################################################################################################################


///////////////////////////////////////////////////////
"NEXT ON THE LIST" SUMMARY SECTION
///////////////////////////////////////////////////////

Post on hive, telegram, discord, Twitter, Facebook (and r/CryptoMarkets and r/CryptoCurrency on MAJOR RELEASES) whenever there is a new release of the app.

ALWAYS do everything in the optimizations / bugs / tests / ux / qa / other section of this list FIRST, before adding ANY new features (find every flaming turd before we start a dumpster fire).

Youtube channels on the resources page, that MAY BE DYING (keep an eye on them): (none right now)

///////////////////////////////////////////////////////
OPTIMIZATIONS / BUGS / TESTS / UX / QA / OTHER SECTION
///////////////////////////////////////////////////////


Do an info bubble for import / export spreadsheets, include 'pro tip' of saving long / short term holdings to separate spreadsheets for separate tracking.


Make sure all currency markets are added FOR ALL SUPPORTED EXCHANGES.


Review Help FAQ, and config.php settings documentation.


Think over what other "faq" entries would be helpful.


Make sure everything runs smoothly with the charts page turned off.


Write debugging tests for rss feeds.


Consolidate number_to_string() calls, to speed up runtime.


See if exchange API data arrays can be manipulated slightly to build a reusable module for every exchange's API calls.


Consider moving the error log alerts for "email not configured" under the new "notify" category (which avoids duplicate messages).


Check optimization by enabling "telemetry" debug mode, and reviewing debugging logs.


Check log formatting for every debug mode.


Add power failure corruption checks (like chart price data has), to system charts and price alerts file cache data.


Look into laptop touchscreen zingchart js error on Ubuntu 20.04 / Chrome, when hiding / showing assets in performance chart (but is fine on Ubuntu 20.04 / Chrome on desktop). IT DOESN'T SEEM TO BE MY CODE, SO REPORT IT TO THE ZINGCHART TEAM.


Use new internal api function calls as much as possible for the tests logic we had already built.


Cross-browser test RTL (right to left) effects from middle eastern currency symbols being injected into the interface output for those currencies


Test unicode mobile text message with no space in front of hex-encoded data (forgot to try that, coded and ready to go now...see content_data_encoding() and /DOCUMENTATION-ETC/Developing-maintaining/DEBUGGING.txt).


Code review ALL functions / logic (especially loops, for efficiency).


Create github wiki with the current documentation for the portfolio app.


Look into X day moving average overlay for price charts.


AFTER the admin config GUI has been built out, make sure plugin configs are re-loaded AFTER 'activate_plugins' in the power user section has been updated.


///////////////////////////////////////////////////////
///////////////////////////////////////////////////////


///////////////////////////////////////////////////////
API INTEGRATION SECTION
///////////////////////////////////////////////////////


Look into adding https://1inch.exchange/#/ to DeFi APIs.


Add BTSE API: https://api.btse.com/spot/api/v3.2/market_summary


Add bithumb API


Check out cryptocompare.com API.


Add localcryptos API support whenever their API is out of private testing.


Build tool that finds localbitcoins markets not added yet


Add twilio.com and clicksend.com mobile text messaging support


Look into adding Google Sheets API support for portfolio import / export: https://developers.google.com/sheets/api/samples/reading


https://zksync.io/api/v0.1.html


///////////////////////////////////////////////////////
///////////////////////////////////////////////////////


///////////////////////////////////////////////////////
FEATURES / STRUCTURING SECTION
///////////////////////////////////////////////////////


Store visitor access data in A SEPERATE flat file / json format PER IP ADDRESS (so mulitiple values can be read back into the app before updating, then updated values saved back in json overwriting previously saved values, BUT AVOIDS MULTIPLE IP ADDRESES OVERWRITING SAME DATA). Last X unique ip addresses (as a power user config setting), showing ip address's last user agent / last visit time (AND HISTORY OF DIFFERENT USER AGENTS / LAST VISITS) / total visits count. Drop any over X ip addresses off the list based on oldest LAST VISIT timestamps. Store visitor data (user agent, etc) in a SECURED CACHE filename based off MD5 HASH of ip address. INITIAL BUILDOUT SHOULD ONLY BE FOR 'ui' RUNTIME DATA ONLY.


Add a "Reset lite charts" button on the admin 'Reset' page, to trigger rebuilding lite charts.


Fully include all leverage in all portfolio summaries, with "(X% leverage)" next to each summary.


Add google home support via direct connect on same network, OR via IFTTT (whichever is most feasible).


Add IFTTT support (alexa / google home / whatever supported devices).


Do a gains / losses bar chart for the gains / losses summary (tooltip, like balance stats chart).


On 'more stats' page, have a 'market comparison stats' chart for arbitrage on one asset (picked from dropdown menu), with default showing BTC / All pairing's markets, with USD conversion. Make it a bar chart, based off the marketcap chart template. Have 3 drop-down menus: Asset, Pairing (with an All option), Primary Currency (conversion). Looping through asset pairings / markets should be a straight forward algo that does the job.


Add market stats summaries from chart data, like bar charts for exchange volume on certain assets / pairs (on 'view more stats' page).


Store the php timeout as a cached var, and compare the CACHED app config to it at runtime. If they differ from each other, delete the root htaccess and user.ini files to trigger recreating them with an updated php timeout. Also make sure the php timeout setting and updating logic / functions are using the CACHED app config.


Auto-update feature like WordPress has (downloads a zip file upgrade from github, and exctracts it overwriting the old app files).


2-way JAVASCRIPT encryption option (unlocked with 6 digit PIN) for showing holdings amounts IN THE GUI (IN COOKIES ONLY, NO DATABASE STORAGE !EVER!), with "quick lock" to quickly re-hide portfolio data (staying hidden persists on page load / reload as well with a cookie).


Option to use new zip file encryption password feature to encrypt portfolio spreadsheet exports when downloading exported portfolio data (with password entered in the UI, #NOT# $app_config['general']['backup_archive_password']).


For each category_key => category_value loop app config, to automate categorizing new admin settings tabs...selects for arrays, text fields for strings. Maybe certain key names get checkbox / radio button fields.


On admin config tabs, add logic to have onchange update a tracking value FOR THAT TAB ONLY, so if a user changes a setting and DOESN'T SAVE IT AND CLICKS ANOTHER SECTION / TAB / LINK they get an alert to confirm leaving the tab without saving their changes. Include on exiting admin config area (returning to portfolio page / closing tab).


Once an admin interface is fully built out, permanently switch out the app config upgrade logic for our new logic (already built, just enable in secured cache logic).


Add force reset logic for app config, if cached app version number is non-existent or below a certain version, so we force a complete reset for non-backwards-compatible upgrades.


On admin config reset tab, have "reset app config to default settings" button (with js confirm alert when pushed) that refreshes ALL the cached app_config from config.php settings.


Admin import / export of settings (consider security implications CAREFULLY...include an optional / mandatory checkbox to encrypt to zip file with our new zip encryption feature).


When cached app config is independent of config.php updating-wise, use the show / hide link to have an optional email field on the admin registration page, and mention it enables password resetting via email.


Add admin settings feature to restore chart data from the zip archive backups (with admin authentication ONLY). Chart restore by prepending, so any existing data remains, BUT only if timestamp is newer than newest backups timestamp. Trigger restore from newest backups folder backup by placing a blank file named RESTORE_CHARTS in the queue directory.


Give plugins a dedicated admin page (if any are activated), for UI settings etc.


Once the admin UI is complete, create a "Desktop Edition" using PHPDesktop (https://github.com/cztomczak/phpdesktop/wiki), so it can easily be downloaded / run locally as a native app...SUPER IMPORTANT FOR MASS USER ADOPTION!!!


Add Google and Microsoft translate API as options to translate the portfolio interface and price alerts.


Wrap all interface English within a "placeholder" lang_translate() function call. Then from a developer perspective you can still fully see the interface logic, and build out translation logic over time later. 


Create help page modal for explanations on all config.php settings. Then we can run this through the upcoming lang_translate() function.


Add additional ability to do telegram webhooks, to query asset prices at different exchanges through telegram chat with the chat bot. Example: "/price ETH/USDT @ Binance"


Documentation for Webhook features


Add webhook keys on admin page.


Simple trading bot, to run as a cron plugin (with web UI for configuration / stats / etc)


Turn string / array manipulations function file into a class.


///////////////////////////////////////////////////////
///////////////////////////////////////////////////////


///////////////////////////////////////////////////////
MAYBE SECTION
///////////////////////////////////////////////////////


Add human-readable INITIAL start date / time as an OPTIONAL extra config param in recurring reminder plugin?


Add defipulse 'preferred platform' config in power user section, which falls back to ANY highest volume / liquidity platform's market if no market is found for the preferred platform.


Add drop-down menu feature next to "Save Updated Portfolio" buttons for "save as": cookie data | only post data.


Mail trading notes to admin email, only if user logged in as admin.


Create "Export your feeds" link on News page, to XML / JSON format file download (like exporting portfolio logic).


In debug mode, maybe add our new 'used ram' stat instead (that doesn't include buffers / cached ram).


Use SQLite for any data storage that needs query capability (can also be used in PHPDesktop version, as it supports SQLite).


Make default btc exchange in config.php optional, and auto-configure if invalid or left blank, based off the default primary currency setting (still log errors though). Additionally, consider defaulting to USD if the primary currency setting is invalid / blank as well (as long as we also error log any detected issues there too)??


SQL-based accounts for storing configuration settings per-user (including setting up new assets available at supported exchanges), BUT !NEVER! STORES PORTFOLIO DATA (FOR PRIVACY / SECURITY-SAKE).


When sql host config has been set in config.php, BUT DATABASE SETUP HAS NOT RUN YET, have the UI require entering the sql user password to initiate database setup (for security)


Maintain sql-based config as completely separate module(s) from the file-based config (config.php), except for the sql host connection / authentication details (put those at the top of the config.php configurations).


Maybe hashed password can be re-hashed with a unique per-browser install semi-constant or constant (like machine name or user agent), to securely store a persistent / semi-persisent login cookie (that hackers cannot steal and run on another machine to auto login easily)? Maybe feasible more so with a 7 day (or less) expiring cookie?


Convert all long hand javascript to jquery?


Save trading notes via the new ajax.php logic (rather than reload the entire app)?


Add memory limit to all runtimes?


Maybe add feature to auto-detect new / removed markets?


Consider error log alerts if system load is over 2, or free memory goes under 25 megabytes?


Alerts if NOT admin ip address visiting (admin ip stored in config setting)?








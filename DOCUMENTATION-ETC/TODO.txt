

############################################################################################################################
TO-DO NOTES
############################################################################################################################

///////////////////////////////////////////////////////
GENERAL NOTES SECTION
///////////////////////////////////////////////////////


Always set bluefish to "4 spaces" as a tab indentation, and enabling indentation of selected text.


Try sticking with small infrastructure changes, and breaking up large changes into small milestones, then plenty of time is spent on UX / testing / logging / debugging.


Always test in a WebKit-based browser [Epiphany|Safari], Firefox, and Chromium.


Post on hive, telegram, discord, Twitter, Facebook (and r/CryptoMarkets and r/CryptoCurrency on MAJOR RELEASES) whenever there is a new release of the app.


ALWAYS do everything in the optimizations / bugs / tests / ux / qa / other section of this list FIRST, before adding ANY new features (find every flaming turd before we start a dumpster fire).


Youtube channels on the resources page, that MAY BE DYING (keep an eye on them): (none right now)


Don't require any higher than PHP v7.2 until 2023 or later, as Ubuntu 18 only packages PHP 7.2.x by default as of right now. We don't want to hold back some users capability to run the app easily.


Use new internal api function calls as much as possible for the tests logic we had already built.


Keep github price chart bootstrap download updated weekly!


///////////////////////////////////////////////////////
OPTIMIZATIONS / BUGS / TESTS / UX / QA / OTHER SECTION
///////////////////////////////////////////////////////


Overhaul / optimize config checks.


Add a dedicated system chart file for plugin cron stats ONLY (runtime seconds, etc).


Investigate / report to PHP devs (IF IT'S NOT A FILE READ ISSUE) the .htaccess password bug (/classes/core/cache.php, line 189) issue on Windows 10 / XAMPP 3.3.0 / PHP 7.4.24: $htaccess_password = crypt( $htaccess_password, base64_encode($htaccess_password) );


Add ENJ / MATIC kraken markets.


Look into adding Balancer (BAL), Bittrex just added it for US customers.


Check in on defipulse API data, unit tests showed it failing across the board for price data.


Make sure everything STILL runs smoothly with the charts page turned off.


Update Portfolio page screenshots, since we added the 'Rank' column AND REBRANDED app name.


For the language translation cache (to avoid asking API for a translation if we already did once), include a hash digest of the original English text used to translate. That way if the hash changes for the current English text used (English is never translated as it's the default), we know we need to re-translate with a fresh API call, and also save the new hash digest of the current English text as well.


Prioritize building the admin interface / language translation modules / native app "desktop edition" (via PHPdesktop) above all other infrastructure. Then it's the most useful for the maximum number of people as it can be going forward.


Breakup numerous function call parameters for calls like ui_asset_row() into a param array, like we did for update_all_cookies(). Also do line breaks like we do for arrays on any large string inputs into function calls, like we did for log().


Add remote IP address data to ALL relevant security error logging everywhere in the app.


Consolidate cookie / post data importing that are near the top of the update and portfolio page UI rendering files, into just one subroutine BEFORE the UI is rendered.


Statement nesting indentation is a tad f#cked up after a TON of batch find / replace (at least displaying in bluefish), so clean stuff up add some more left margin on nested statements where it looks schetchy...class files are fixed, just have to check inline logic files. INDENTING SPACING IN FILES #CHANGES AUTOMATICALLY# WHEN "BLUEFISH => PREFERENCES => INITIAL DOCUMENT SETTINGS => TAB WIDTH" IS CHANGED, SO BE CAREFUL WHEN FIXING!!


May come in handy for writing PHP unit tests: https://stackoverflow.com/questions/861254/iterate-over-properties-of-a-php-class


Add same logic we have for internal API request throttling to the admin login / reset attempts, make setting configurable.


Make sure ALL MARKETS are added FOR ALL SUPPORTED EXCHANGES (EVERY EXCHANGE IN exchange-ticker-apis.php), then re-run the exchange summaries printout (in debug mode), for updating documentation on the web page / README / in config.php.


Look into laptop touchscreen zingchart js error on Ubuntu 20.04 / Chrome, when hiding / showing assets in performance chart (but is fine on Ubuntu 20.04 / Chrome on desktop). IT DOESN'T SEEM TO BE MY CODE, SO REPORT IT TO THE ZINGCHART TEAM.


Consider moving the error log alerts for "email not configured" under the new "notify" category (which avoids duplicate messages).


Add power failure corruption checks (like chart price data has), to system charts and price alerts file cache data.


Check optimization by enabling "telemetry" debug mode, and reviewing debugging logs.


Check log formatting for every debug mode.


Write debugging tests for rss feeds.


Consolidate num_to_str() calls, to speed up runtime.


See if exchange API data arrays can be manipulated slightly to build a reusable module for every exchange's API calls.


Look into X day moving average overlay for price charts.


Review Help FAQ, and config.php settings documentation.


Think over what other "faq" entries would be helpful.


Create github wiki with the current documentation for the portfolio app.


Cross-browser test RTL (right to left) effects from middle eastern currency symbols being injected into the interface output for those currencies


Test unicode mobile text message with no space in front of hex-encoded data (forgot to try that, coded and ready to go now...see $ct_gen->charset_encode() and /DOCUMENTATION-ETC/Developing-maintaining/DEBUGGING.txt).


AFTER the admin config GUI has been built out, make sure plugin configs are re-loaded AFTER 'activate_plugins' in the power user section has been updated.


For 'Desktop Edition' (using phpdesktop), look into using docker images for cross-platform compatibility (Windows / Mac / Linux).


///////////////////////////////////////////////////////
///////////////////////////////////////////////////////


///////////////////////////////////////////////////////
API INTEGRATION SECTION
///////////////////////////////////////////////////////


https://docs.bonfida.com/#introduction (solana dex API??)


Look into adding Google Sheets API support for portfolio import / export: https://developers.google.com/sheets/api/samples/reading


Look into adding https://1inch.exchange/#/ to DeFi APIs.


Add BTSE API: https://api.btse.com/spot/api/v3.2/market_summary


Add bithumb API


Check out cryptocompare.com API.


Add localcryptos API support whenever their API is out of private testing.


Build tool that finds localbitcoins markets not added yet


Add twilio.com and clicksend.com mobile text messaging support


https://zksync.io/api/v0.1.html


///////////////////////////////////////////////////////
///////////////////////////////////////////////////////


///////////////////////////////////////////////////////
FEATURES / STRUCTURING SECTION
///////////////////////////////////////////////////////


Add ability to email selected news feed links every X days, only including the 'new' posts that are detected.


For admin area pages / sections, consider doing subsections in a modal subwindow, with iframes for loading through 'wizard' steps or opening different categories. It would possibly keep a native app 'feel' while also reducing admin page load times. Think it over, figure out the best solution here for a great UX.


On admin "assets" page, add a button atop the page called " Add New Asset Or Market". Then, on page 1 of the 'add asset' wizard (multi-step on separate modal pages), only have the radio selection choices (only one can be selected): 'Add new asset' and 'Add new market to existing asset'. 


The upcoming 'add new asset market' admin interface feature should be a "wizard" with a few "steps", to have a decent user experience AND break the logic up into different checks / steps under the hood as well. 1) Asset name and symbol, 2) Choose from a list of exchanges and pairings available for that asset, 3) Enable charts and or alerts for different exchanges and pairings.


On 'more stats' page, add a 'market volume' chart, showing a multi-line chart (like asset comparison chart) of all [charts-fiat-conversion-currency] volumes for an asset's configured markets THAT HAVE CHARTS ENABLED (so we grab values from lite chart data). Default to showing Bitcoin, allow using different lite chart time periods (like asset comparison chart).


Add logic to offer securing the computer in the auto-install. Add subsections "Requiring Password For Sudo (Admin)" / "Disabling Bluetooth" / "Enabling firewall" inside a main prompt "Would you like to secure your computer against hacks?" For the bluetooth disabling section, include a commented section so we know if we've already APPENDED (>> IN BASH, NOT >) to boot/config.txt (like we do for htaccess). For firewall setup add a loop that you add new ports to open and quit the loop when finished...AND AUTOMATICALLY OPEN PORTS 80 / 443 FOR THIS APP, AND SSH STUFF TOO IF DETECTED AS INSTALLED ON THE SYSTEM!


Create a power user config option to toggle between plain text and HTML email. We can have the $ct_cache->queue_notify() function detect if HTML email is enabled, and run email messages through PHP's built-in nl2br() function if so, which converts newlines to <br /> tags.


Add a "Reset lite charts" button on the admin 'Reset' page, to trigger rebuilding lite charts.


Fully include all leverage in all portfolio summaries, with "(X% leverage)" next to each summary.


Store the php timeout as a cached var, and compare the CACHED app config to it at runtime. If they differ from each other, delete the root htaccess and user.ini files to trigger recreating them with an updated php timeout. Also make sure the php timeout setting and updating logic / functions are using the CACHED app config.


Store visitor access data in A SEPERATE flat file / json format PER IP ADDRESS (so mulitiple values can be read back into the app before updating, then updated values saved back in json overwriting previously saved values, BUT AVOIDS MULTIPLE IP ADDRESES OVERWRITING SAME DATA). Last X unique ip addresses (as a power user config setting), showing ip address's last user agent / last visit time (AND HISTORY OF DIFFERENT USER AGENTS / LAST VISITS) / total visits count. Drop any over X ip addresses off the list based on oldest LAST VISIT timestamps. Store visitor data (user agent, etc) in a SECURED CACHE filename based off MD5 HASH of ip address. INITIAL BUILDOUT SHOULD ONLY BE FOR 'ui' RUNTIME DATA ONLY.


Create mobile devices templates, have the portfolio data rows show each piece of data on its own line the entire width of the screen (like android asset trackers do). We may need to create header / footer for mobile as well.


Add additional ability to do telegram webhooks, to query asset prices at different exchanges through telegram chat with the chat bot. Example: "/price ETH/USDT @ Binance"


Documentation for Webhook features.


Add webhook keys on admin page.


Do a gains / losses bar chart for the gains / losses summary (tooltip, like balance stats chart).


On 'more stats' page, have a 'market comparison stats' chart for arbitrage on one asset (picked from dropdown menu), with default showing BTC / All pairing's markets, with USD conversion. Make it a bar chart, based off the marketcap chart template. Have 3 drop-down menus: Asset, Pairing (with an All option), Primary Currency (conversion). Looping through asset pairings / markets should be a straight forward algo that does the job.


Add market stats summaries from chart data, like bar charts for exchange volume on certain assets / pairs (on 'view more stats' page).


Auto-update feature like WordPress has (downloads a zip file upgrade from github, and exctracts it overwriting the old app files).


2-way JAVASCRIPT encryption option (unlocked with 6 digit PIN) for showing holdings amounts IN THE GUI (IN COOKIES ONLY, NO DATABASE STORAGE !EVER!), with "quick lock" to quickly re-hide portfolio data (staying hidden persists on page load / reload as well with a cookie).


Option to use new zip file encryption password feature to encrypt portfolio spreadsheet exports when downloading exported portfolio data (with password entered in the UI, #NOT# $ct_conf['gen']['backup_arch_pass']).


For each cat_key => cat_val loop app config, to automate categorizing new admin settings tabs...selects for arrays, text fields for strings. Maybe certain key names get checkbox / radio button fields.


On admin config tabs, add logic to have onchange update a tracking value FOR THAT TAB ONLY, so if a user changes a setting and DOESN'T SAVE IT AND CLICKS ANOTHER SECTION / TAB / LINK they get an alert to confirm leaving the tab without saving their changes. Include on exiting admin config area (returning to portfolio page / closing tab).


Once an admin interface is fully built out, permanently switch out the app config upgrade logic for our new logic (already built, just enable in secured cache logic).


Add force reset logic for app config, if cached app version number is non-existent or below a certain version, so we force a complete reset for non-backwards-compatible upgrades.


On admin config reset tab, have "reset app config to default settings" button (with js confirm alert when pushed) that refreshes ALL the cached ct_conf from config.php settings.


Admin import / export of settings (consider security implications CAREFULLY...include an optional / mandatory checkbox to encrypt to zip file with our new zip encryption feature).


When cached app config is independent of config.php updating-wise, use the show / hide link to have an optional email field on the admin registration page, and mention it enables password resetting via email.


Add admin settings feature to restore chart data from the zip archive backups (with admin authentication ONLY). Chart restore by prepending, so any existing data remains, BUT only if timestamp is newer than newest backups timestamp. Trigger restore from newest backups folder backup by placing a blank file named RESTORE_CHARTS in the queue directory.


Give plugins a dedicated admin page (if any are activated), for UI settings etc.


Once the admin UI is complete, create a "Desktop Edition" using PHPDesktop (https://github.com/cztomczak/phpdesktop/wiki), so it can easily be downloaded / run locally as a native app...SUPER IMPORTANT FOR MASS USER ADOPTION!!!


Create help page modal for explanations on all config.php settings, that we can link to / open specific sections from a click next to that setting in the admin GUI. Then we can run this through the upcoming lang_translate() function as well.


Wrap all interface English within a "placeholder" lang_translate() function call. Then from a developer perspective you can still fully see the interface logic, and build out translation logic over time later. 


Add Google or Microsoft translate API as options to translate the portfolio interface and price alerts.


Simple trading bot, to run as a cron plugin (with web UI for configuration / stats / etc)


///////////////////////////////////////////////////////
///////////////////////////////////////////////////////


///////////////////////////////////////////////////////
MAYBE SECTION
///////////////////////////////////////////////////////


Change the api key format to GET instead of POST on my portfolio app's internal REST API, so browser-based javascript implementations can work cross-site retrieving data.


Add an OPTIONAL 'cron_plugins_runtime' stat in system charts (save as NO_DATA if non-existant to avoid UI rendering, like we do for temperature sensor). We'd need to append to the same line in the .dat file RIGHT AFTER THE CORE LOGIC HAS ALREADY WRITTEN TO IT. Not sure if this potentially could cause corruption issues in edge cases?


Add defipulse 'preferred platform' config in power user section, which falls back to ANY highest volume / liquidity platform's market if no market is found for the preferred platform.


Add drop-down menu feature next to "Save Updated Portfolio" buttons for "save as": cookie data | only post data.


Create "Export your feeds" link on News page, to XML / JSON format file download (like exporting portfolio logic).


In debug mode, maybe add our new 'used ram' stat instead (that doesn't include buffers / cached ram).


Use SQLite for any data storage that needs query capability (can also be used in PHPDesktop version, as it supports SQLite).


Make default btc exchange in config.php optional, and auto-configure if invalid or left blank, based off the default primary currency setting (still log errors though). Additionally, consider defaulting to USD if the primary currency setting is invalid / blank as well (as long as we also error log any detected issues there too)??


SQL-based accounts for storing configuration settings per-user (including setting up new assets available at supported exchanges), BUT !NEVER! STORES PORTFOLIO DATA (FOR PRIVACY / SECURITY-SAKE).


When sql host config has been set in config.php, BUT DATABASE SETUP HAS NOT RUN YET, have the UI require entering the sql user password to initiate database setup (for security)


Maintain sql-based config as completely separate module(s) from the file-based config (config.php), except for the sql host connection / authentication details (put those at the top of the config.php configurations).


Convert all long hand javascript to jquery?


Save trading notes via the new ajax.php logic (rather than reload the entire app)?


Add memory limit to all runtimes?


Maybe add feature to auto-detect new / removed markets?


Consider error log alerts if system load is over 2, or free memory goes under 25 megabytes?


Alerts if NOT admin ip address visiting (admin ip stored in config setting)?





############################################################################################################################
############################################################################################################################




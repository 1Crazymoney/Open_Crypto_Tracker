
/*
 * Copyright 2014-2020 GPLv3, DFD Cryptocoin Values by Mike Kilday: http://DragonFrugal.com
 */
 
 
// BELOW IS AN EXAMPLE SET OF CONFIGURED ASSETS AND DEFAULT SETTINGS. PLEASE NOTE THIS IS PROVIDED TO ASSIST YOU IN ADDING YOUR PARTICULAR FAVORITE ASSETS TO THE DEFAULT LIST, AND !---IN NO WAY---! INDICATES ENDORSEMENT OF !---ANY---! OF THESE ASSETS:



///////////////////////////////////////////////////////////////////////////////////////////////
/////////////////// PRIMARY CONFIGURATIONS -START- ////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////


// SEE README.txt FOR HOW TO ADD / EDIT / DELETE COINS IN THIS CONFIG

// SEE /DOCUMENTATION-ETC/CONFIG-EXAMPLE.txt FOR A FULL EXAMPLE OF THE DEFAULT CONFIGURATION (ESPECIALLY IF YOU MESS UP config.php, lol)

// See /DOCUMENTATION-ETC/HELP-FAQ.txt for tips / troubleshooting FAQs.

// TYPOS LIKE MISSED COMMAS / MISSED QUOTES / ETC !!!!WILL BREAK THE APP!!!!, BE CAREFUL EDITING THIS CONFIG FILE


////////////////////////////////////////
// !START! COMMUNICATIONS CONFIGURATION
////////////////////////////////////////


// IF SMTP EMAIL SENDING --NOT-- USED, FROM email should be REAL address on the website domain, or risk having email blacklisted / sent to junk folder
// IF SMTP EMAIL SENDING --IS-- USED, FROM EMAIL MUST MATCH EMAIL ADDRESS associated with SMTP login (SMTP Email configuration is below this setting)
$app_config['comms']['from_email'] = ''; // MUST BE SET for price alerts and other email features
////
$app_config['comms']['to_email'] = ''; // MUST BE SET for price alerts and other email features


// OPTIONALLY use SMTP authentication TO SEND EMAIL, if you have no reverse lookup that matches domain name (on your home network etc)
// !!USE A THROWAWAY ACCOUNT ONLY!! If web server is hacked, HACKER WOULD THEN HAVE ACCESS YOUR EMAIL LOGIN FROM THIS FILE!!
// If SMTP credentials / configuration is filled in, BUT not setup properly, APP EMAILING WILL FAIL
// CAN BE BLANK (PHP's built-in mail function will be automatically used to send email instead)
$app_config['comms']['smtp_login'] = ''; //  CAN BE BLANK. This format MUST be used: 'username||password'
////
// Examples: 'example.com:25' (non-encrypted), 'example.com:465' (ssl-encrypted), 'example.com:587' (tls-encrypted)
$app_config['comms']['smtp_server'] = ''; // CAN BE BLANK. This format MUST be used: 'domain_or_ip:port_number' 
////
// MAKE SURE PORT NUMBER ABOVE CORRESPONDS
$app_config['comms']['smtp_secure'] = 'tls'; // CAN BE 'off' FOR NO SECURE CONNECTION, or 'tls', or 'ssl' for secure connections. 


// For alert texts to mobile phone numbers. 
// Attempts to email the text if a SUPPORTED MOBILE TEXTING NETWORK name is set, AND no textbelt / textlocal config is setup.
// SMTP-authenticated email sending MAY GET THROUGH TEXTING SERVICE CONTENT FILTERS #BETTER# THAN USING PHP'S BUILT-IN EMAILING FUNCTION
// SEE FURTHER DOWN IN THIS CONFIG FILE, FOR A LIST OF SUPPORTED MOBILE TEXTING NETWORK PROVIDER NAMES 
// IN THE EMAIL-TO-MOBILE-TEXT CONFIG SECTION (the "network name keys" in the $app_config['mobile_network_text_gateways'] variables array)
// CAN BE BLANK. Country code format MAY NEED TO BE USED (depending on your mobile network)
// skip_network_name SHOULD BE USED IF USING textbelt / textlocal BELOW
// 'phone_number||network_name_key' (examples: '12223334444||virgin_us' / '12223334444||skip_network_name')
$app_config['comms']['to_mobile_text'] = '';


// Do NOT use textbelt AND textlocal together. Leave one setting blank, OR IT WILL DISABLE USING BOTH.
// LEAVE textbelt AND textlocal BOTH BLANK to use a mobile text gateway set ABOVE

// CAN BE BLANK. For asset price alert textbelt notifications. Setup: https://textbelt.com/
$app_config['comms']['textbelt_apikey'] = '';


// CAN BE BLANK. For asset price alert textlocal notifications. Setup: https://www.textlocal.com/integrations/api/
$app_config['comms']['textlocal_account'] = ''; // This format MUST be used: 'username||hash_code'


// Sending alerts to your own telegram bot chatroom. 
// (USEFUL IF YOU HAVE ISSUES SETTING UP MOBILE TEXT ALERTS, INCLUDING EMOJI / UNICODE CHARACTER ENCODING)
// Setup: https://core.telegram.org/bots , OR JUST SEARCH / VISIT "BotFather" in the telegram app
// YOU MUST SETUP A TELEGRAM USERNAME #FIRST / BEFORE SETTING UP THE BOT#, IF YOU HAVEN'T ALREADY (IN THE TELEGRAM APP SETTINGS)
// SET UP YOUR BOT WITH "BotFather", AND SAVE YOUR BOT NAME / USERNAME / ACCESS TOKEN / BOT CHATROOM LINK
// VISIT THE BOT CHATROOM, #SEND THE MESSAGE "/start" TO THIS CHATROOM# (THIS WILL CREATE USER CHAT DATA THE APP NEEDS)
// THE USER CHAT DATA #IS REQUIRED# FOR THIS APP TO INITIALLY DETERMINE AND SECURELY SAVE YOU TELEGRAM USER'S CHAT ID
// #DO NOT DELETE THE BOT CHATROOM IN THE TELEGRAM APP, OR YOU WILL STOP RECEIVING MESSAGES FROM THE BOT#
$app_config['comms']['telegram_your_username'] = ''; // Your telegram username (REQUIRED, setup in telegram app settings)
////
$app_config['comms']['telegram_bot_username'] = '';  // Your bot's username
////
$app_config['comms']['telegram_bot_name'] = ''; // Your bot's human-readable name (example: 'My Alerts Bot')
////
$app_config['comms']['telegram_bot_token'] = '';  // Your bot's access token


// Smart home notifications

// For notifyme / alexa notifications (sending Alexa devices notifications for free). 
// CAN BE BLANK. Setup: http://www.thomptronics.com/notify-me
$app_config['comms']['notifyme_accesscode'] = '';


// Google Home alert configuration (WORK IN PROGRESS, !!NOT FUNCTIONAL!!)
// CAN BE BLANK. Setup: https://developers.google.com/assistant/engagement/notifications
$app_config['comms']['google_application_name'] = '';
////
$app_config['comms']['google_client_id'] = '';
////
$app_config['comms']['google_client_secret'] = '';


// Enable / disable daily upgrade checks and alerts (DEFAULT IS DISABLED)
// (Checks latest release version via github.com API endpoint value "tag_name" 
// @ https://api.github.com/repos/taoteh1221/DFD_Cryptocoin_Values/releases/latest)
// Choosing 'all' will send to all properly-configured communication channels, and automatically skip any not properly setup
$app_config['comms']['upgrade_check'] = 'off'; // 'off' (disabled) / 'all' / 'ui' (web interface) / 'email' / 'text' / 'notifyme' / 'telegram'
////
// Wait X days between upgrade reminders (sent by email / text / notifyme / telegram)
$app_config['comms']['upgrade_check_reminder'] = 14; // (only used if upgrade check is enabled above)


// Email logs every X days. 0 disables mailing logs. Email to / from !MUST BE SET!, MAY NOT SEND IN TIMELY FASHION WITHOUT A CRON JOB
$app_config['comms']['email_logs'] = 3; 


// PRICE ALERTS SETUP REQUIRES A CRON JOB RUNNING ON YOUR WEBSITE SERVER (see README.txt for cron job setup information) 
// Price alerts will send to all properly-configured communication channels, and automatically skip any not properly setup
// Price percent change to send alerts for (WITHOUT percent sign: 15 = 15%). Sends alerts when percent change reached (up or down)
$app_config['comms']['price_alerts_threshold'] = 8.85; // CAN BE 0 TO DISABLE PRICE ALERTS
////
// Re-allow SAME asset price alert(s) messages after X hours (per asset, set higher if issues with blacklisting...can be 0)
// Price alerts AUTOMATICALLY will send to all properly-configured communication channels, and automatically skip any not properly setup
$app_config['comms']['price_alerts_freq_max'] = 8; 
////
// Block an asset price alert if price retrieved, BUT failed retrieving pair volume (not even a zero was retrieved, nothing)
// Good for blocking questionable exchanges bugging you with price alerts, especially when used in combination with the minimum volume filter
$app_config['comms']['price_alerts_block_volume_error'] = 'on'; // 'on' / 'off' 
////
// Minimum 24 hour volume filter. Only allows sending price alerts if minimum 24 hour volume reached
// CAN BE 0 TO DISABLE MINIMUM VOLUME FILTERING, NO DECIMALS OR SEPARATORS, NUMBERS ONLY, WITHOUT the [primary currency] prefix symbol: 4500 = $4,500 , 30000 = $30,000 , etc
// THIS FILTER WILL AUTO-DISABLE IF THERE IS ANY ERROR RETRIEVING DATA ON A CERTAIN MARKET (WHEN NOT EVEN A ZERO IS RECEIVED)
$app_config['comms']['price_alerts_min_volume'] = 14000;


// Alerts for failed proxy data connections (if proxies are enabled further down in PROXY CONFIGURATION). 
// Choosing 'all' will send to all properly-configured communication channels, and automatically skip any not properly setup
$app_config['comms']['proxy_alerts'] = 'email'; // 'off' (disabled) / 'all' / 'email' / 'text' / 'notifyme' / 'telegram'
////
$app_config['comms']['proxy_alerts_freq_max'] = 1; // Re-allow same proxy alert(s) after X hours (per ip/port pair, can be 0)
////
$app_config['comms']['proxy_alerts_runtime'] = 'cron'; // Which runtime mode should allow proxy alerts? Options: 'cron', 'ui', 'all' 
////
// 'include' or 'ignore' proxy alerts, if proxy checkup went OK? (after flagged, started working again when checked)
$app_config['comms']['proxy_alerts_checkup_ok'] = 'include'; 


////////////////////////////////////////
// !END! COMMUNICATIONS CONFIGURATION
////////////////////////////////////////


////////////////////////////////////////
// !START! GENERAL CONFIGURATION
////////////////////////////////////////


// Interface login protection (htaccess user/password required to view this portfolio app's web interface)
// Username MUST BE at least 4 characters, beginning with ONLY LOWERCASE letters (may contain numbers AFTER first letter), NO SPACES
// Password MUST BE EXACTLY 8 characters, AND contain one number, one UPPER AND LOWER CASE letter, and one symbol, NO SPACES
// (ENABLES / UPDATES automatically, when a valid username / password are filled in or updated here)
// (DISABLES automatically, when username / password are blank '' OR invalid) 
// (!ONLY #UPDATES OR DISABLES# AUTOMATICALLY #AFTER# LOGGING IN ONCE WITH YOUR #OLD LOGIN# [or if a cron job runs with the new config]!)
$app_config['general']['interface_login'] = ''; // Leave blank to disable requiring an interface login. This format MUST be used: 'username||password'


// API key for etherscan.io (required unfortunately, but a FREE level is available): https://etherscan.io/apis
$app_config['general']['etherscanio_api_key'] = '';


// API key for coinmarketcap.com Pro API (required unfortunately, but a FREE level is available): https://coinmarketcap.com/api
$app_config['general']['coinmarketcapcom_api_key'] = '';


// Password protection / encryption security for backup archives (chart data archives, etc)
$app_config['general']['backup_archive_password'] = ''; // LEAVE BLANK TO DISABLE


$app_config['general']['backup_archive_delete_old'] = 10; // Days until old backup archives should be deleted (chart data archives, etc)


// Your local time offset IN HOURS, COMPARED TO UTC TIME. Can be negative or positive.
// (Used for user experience 'pretty' timestamping in interface logic ONLY, WILL NOT change or screw up UTC log times etc if you change this)
$app_config['general']['local_time_offset'] = -4; // example: -5 or 5


// Default marketcap data source: 'coingecko', or 'coinmarketcap' (COINMARKETCAP REQUIRES A #FREE# API KEY, see below)
$app_config['general']['primary_marketcap_site'] = 'coingecko'; 


// ENABLING CHARTS REQUIRES A CRON JOB SETUP (see README.txt for cron job setup information)
// Enables a charts tab / page with historical charts
// Caches the default [primary currency] ($app_config['general']['btc_primary_currency_pairing'] further down in GENERAL CONFIGURATION)
// default [primary currency] price / crypto price / volume data for charts of all assets added to $app_config['charts_alerts']['tracked_markets'] (further down in CHART AND PRICE ALERT CONFIGURATION)
// Disabling will disable EVERYTHING related to the price charts (price charts tab / page, and price chart data caching)
$app_config['general']['charts_toggle'] = 'on'; // 'on' / 'off'


// Configure which interface theme you want as the default theme (also can be manually switched later, on the settings page in the interface)
$app_config['general']['default_theme'] = 'dark'; // 'dark' or 'light'


$app_config['general']['margin_leverage_max'] = 150; // Maximum margin leverage available in the user interface ('Update' page, etc)


// Highest numeric value sensor data to include in the FIRST system information chart (out of two)
// (higher sensor data is moved into the second chart, to keep ranges easily readable between both charts...only used if stats are enabled above)
$app_config['general']['system_stats_first_chart_highest_value'] = 3.5; // Can be a decimal (example: 0.5 or 7.5 etc)


// Default BITCOIN-ONLY currency market pairings (80+ primary currencies supported)
// (set for default Bitcoin market, and charts / price alert primary-currency-equivalent value determination [example: usd value of btc/ltc market, etc])
// aed / ars / aud / bam / bdt / bob / brl / bwp / byn / cad / chf / clp / cny / cop / crc / czk / dai / dkk / dop / egp / 
// eth / eur / gbp / gel / ghs / gtq / hkd / huf / idr / ils / inr / irr / jmd / jod / jpy / kes / krw / kwd / kzt / lkr / 
// ltc / mad / mur / mwk / mxn / myr / ngn / nis / nok / nzd / pab / pen / php / pkr / pln / pyg / qar / ron / rsd / rub / 
// rwf / sar / sek / sgd / thb / try / tusd / twd / tzs / uah / ugx / usdc / usdt / uyu / ves / vnd / xaf / xof / zar / zmw
// SEE THE $app_config['portfolio_assets'] CONFIGURATION NEAR THE BOTTOM OF THIS CONFIG FILE, FOR THE PROPER (CORRESPONDING)
// CURRENCY PAIRING VALUE NEEDED FOR YOUR CHOSEN 'BTC' EXCHANGE (set in $app_config['general']['btc_primary_exchange'] directly below)
$app_config['general']['btc_primary_currency_pairing'] = 'usd'; // PUT INSIDE SINGLE QUOTES ('selection')


// Default BITCOIN-ONLY exchanges (30+ bitcoin exchanges supported)
// (set for default Bitcoin market, and charts / price alert primary-currency-equivalent value determination [example: usd value of btc/ltc market, etc])
// binance / binance_us / bit2c / bitbns / bitfinex / bitflyer / bitpanda / bitso / bitstamp / braziliex / btcmarkets / 
// btcturk / buyucoin / cex / coinbase / coss / gemini / hitbtc / huobi / korbit / kraken / lakebtc / livecoin / 
// localbitcoins / luno / okcoin / okex / southxchange / tidebit / upbit / zebpay
// SEE THE $app_config['portfolio_assets'] CONFIGURATION NEAR THE BOTTOM OF THIS CONFIG FILE, FOR THE PROPER (CORRESPONDING)
// MARKET PAIRING VALUE NEEDED FOR YOUR CHOSEN 'BTC' EXCHANGE (to populate $app_config['general']['btc_primary_currency_pairing'] directly above with)
// SEE THE $app_config['developer']['limited_apis'] SETTING MUCH FURTHER DOWN, FOR EXCHANGES !NOT RECOMMENDED FOR USAGE HERE!
$app_config['general']['btc_primary_exchange'] = 'kraken';  // PUT INSIDE SINGLE QUOTES ('selection')


// Maximum decimal places for [primary currency] values,
// of coins worth under 'primary_currency_decimals_max_threshold' [usd/gbp/eur/jpy/brl/rub/etc] (below this setting),
// for prettier / less-cluttered interface. IF YOU ADJUST $app_config['general']['btc_primary_currency_pairing'] ABOVE, 
// YOU MAY NEED TO ADJUST THIS ACCORDINGLY FOR !PRETTY / FUNCTIONAL! CHARTS / ALERTS FOR YOUR PRIMARY CURRENCY
$app_config['general']['primary_currency_decimals_max'] = 5; // Whole numbers only (represents number of decimals maximum to use)


// Below what currency amount do we switch from 2 decimals, over to using the above 'primary_currency_decimals_max' setting
$app_config['general']['primary_currency_decimals_max_threshold'] = 0.70; // Can be decimals, NO SYMBOLS, NUMBERS ONLY


////////////////////////////////////////
// !END! GENERAL CONFIGURATION
////////////////////////////////////////


////////////////////////////////////////
// !START! PROXY CONFIGURATION
////////////////////////////////////////


// If using proxies and login is required
// Adding a user / pass here will automatically send login details for proxy connections
// CAN BE BLANK. IF using ip address whitelisting instead, MUST BE LEFT BLANK
$app_config['proxy']['proxy_login'] = ''; // Use format: 'username||password'
////
// If using proxies, add the ip address / port number here for each one, like examples below (without the double slashes in front enables the code)
// CAN BE BLANK. Adding proxies here will automatically choose one randomly for each API request
$app_config['proxy']['proxy_list'] = array(
					// 'ipaddress1:portnumber1',
					// 'ipaddress2:portnumber2',
					);


////////////////////////////////////////
// !END! PROXY CONFIGURATION
////////////////////////////////////////


////////////////////////////////////////
// !START! CHART AND PRICE ALERT CONFIGURATION
////////////////////////////////////////


// CHARTS / PRICE ALERTS SETUP REQUIRES A CRON JOB RUNNING ON YOUR WEBSITE SERVER (see README.txt for cron job setup information) 

// Chart colors (https://www.w3schools.com/colors/colors_picker.asp)
////
// Charts border color
$app_config['charts_alerts']['charts_border'] = '#808080';  
////
// Charts background color
$app_config['charts_alerts']['charts_background'] = '#515050';  
////
// Charts line color
$app_config['charts_alerts']['charts_line'] = '#444444';  
////
// Charts text color
$app_config['charts_alerts']['charts_text'] = '#dddddd';  
////
// Charts link color
$app_config['charts_alerts']['charts_link'] = '#b5b5b5';  
////
// Charts price (base) gradient color
$app_config['charts_alerts']['charts_price_gradient'] = '#000000'; 
////
// Charts tooltip background color
$app_config['charts_alerts']['charts_tooltip_background'] = '#bbbbbb';
////
// Charts tooltip text color
$app_config['charts_alerts']['charts_tooltip_text'] = '#222222';
////
// Backup chart data in a zip file in the 'backups' subdirectory (with a secure random suffix for privacy), only used if $app_config['general']['charts_toggle'] (IN GENERAL CONFIGURATION) is on
$app_config['charts_alerts']['charts_backup_freq'] = 1; // Every X days backup chart data. 0 disables backups. Email to / from !MUST BE SET! (a download link is emailed to you of the chart data archive)


// Asset price alert configuration
// Only used if $app_config['charts_alerts']['tracked_markets'] is filled in properly below, AND a cron job is setup (see README.txt for cron job setup information) 
////
// Fixed reset of cached comparison asset prices every X days (since last price reset / alert) with the current latest spot prices
// Can be 0 to disable fixed resetting (IN WHICH CASE RESETS WILL ONLY OCCUR dynamically whenever the next price alert is triggered)
$app_config['charts_alerts']['price_alerts_fixed_reset'] = 0; // (default = 0)
////
// Whale alert (adds "WHALE ALERT" to beginning of alexa / google home / email / telegram alert text, and spouting whale emoji to email / text / telegram)
// Format: 'max_days_to_24hr_average_over||min_price_percent_change_24hr_average||min_volume_percent_increase_24hr_average||min_volume_currency_increase_24hr_average'
// ("min_price_percent_change_24hr_average" should be the same value or higher as $app_config['comms']['price_alerts_threshold'] to work properly)
// Leave BLANK '' TO DISABLE. DECIMALS ARE SUPPORTED, USE NUMBERS ONLY (NO CURRENCY SYMBOLS / COMMAS, ETC)
$app_config['charts_alerts']['price_alerts_whale_alert_threshold'] = '1.65||8.85||9.1||16000';


// Markets you want charts or asset price change alerts for (alerts sent when default [primary currency] 
// [$app_config['general']['btc_primary_currency_pairing'] at top of this config] value change is equal to or above / below $app_config['comms']['price_alerts_threshold']) 
// Delete any double forward slashes from in front of each asset you want to enable charts / price alerts on (or add double slashes in front to disable it)
// NOTE: This list must only contain assets / exchanges / trading pairs included in the primary portfolio assets list configuration further down in this config file
// TO ADD MULTIPLE CHARTS / ALERTS FOR SAME ASSET (FOR DIFFERENT EXCHANGES / TRADE PAIRINGS), FORMAT LIKE SO: symbol, symbol-1, symbol-2, symbol-3, etc.
// TO ENABLE CHART AND ALERT = both, TO ENABLE CHART ONLY = chart, TO ENABLE ALERT ONLY = alert
$app_config['charts_alerts']['tracked_markets'] = array(


					// SYMBOL
				// 'symbol' => 'exchange||trade_pairing||alert',
				// 'symbol-2' => 'exchange2||trade_pairing2||chart',
				// 'symbol-3' => 'exchange3||trade_pairing3||both',
				// 'symbol-4' => 'exchange4||trade_pairing4||none',
				
				
					// OTHERSYMBOL
				// 'othersymbol' => 'exchange||trade_pairing||none',
				// 'othersymbol-2' => 'exchange2||trade_pairing2||both',
				// 'othersymbol-3' => 'exchange3||trade_pairing3||chart',
				// 'othersymbol-4' => 'exchange4||trade_pairing4||alert',
					
					
					// BTC
					'btc' => 'coinbase||usd||chart',
					'btc-2' => 'binance||usdt||both',
					'btc-3' => 'bitstamp||usd||chart',
					'btc-4' => 'kraken||usd||chart',
					'btc-5' => 'gemini||usd||none',
					'btc-6' => 'bitfinex||usd||none',
					'btc-7' => 'binance_us||usd||none',
					'btc-8' => 'kraken||eur||chart',
					'btc-9' => 'coinbase||eur||chart',
					'btc-10' => 'coinbase||gbp||none',
					'btc-11' => 'kraken||cad||none',
					'btc-12' => 'btcmarkets||aud||none',
					'btc-13' => 'bitbns||inr||none',
					'btc-14' => 'localbitcoins||inr||none',
					'btc-15' => 'localbitcoins||cny||chart',
					'btc-16' => 'bitflyer||jpy||chart',
					'btc-17' => 'tidebit||hkd||none',
					'btc-18' => 'localbitcoins||chf||none',
					'btc-19' => 'upbit||krw||chart',
					'btc-20' => 'bitso||mxn||none',
					'btc-21' => 'localbitcoins||nzd||none',
					'btc-22' => 'localbitcoins||rub||none',
					'btc-23' => 'lakebtc||sgd||none',
					'btc-24' => 'btcturk||try||none',
					'btc-25' => 'localbitcoins||twd||none',
					'btc-26' => 'luno||zar||chart',
					'btc-27' => 'kraken||dai||none',
					
					
					// ETH
					'eth' => 'coinbase||btc||chart',
					'eth-2' => 'bittrex||btc||none',
					'eth-3' => 'kraken||btc||chart',
					'eth-4' => 'binance||usdt||both',
					'eth-5' => 'binance_us||btc||none',
					'eth-6' => 'coinbase||usd||chart',
					'eth-7' => 'kraken||usd||chart',
					'eth-8' => 'bitstamp||usd||chart',
					'eth-9' => 'gemini||usd||none',
					'eth-10' => 'coinbase||gbp||none',
					'eth-11' => 'coinbase||eur||chart',
					'eth-12' => 'bittrex||usdt||none',
					'eth-13' => 'bitbns||inr||none',
					
					
					// XMR
					'xmr' => 'bittrex||btc||chart',
					'xmr-2' => 'bittrex||eth||none',
					'xmr-4' => 'binance||btc||both',
					'xmr-5' => 'binance||eth||none',
					
					
					// MKR
					'mkr' => 'okex||btc||chart',
					'mkr-2' => 'kucoin||btc||both',
					
					
					// DCR
					'dcr' => 'bittrex||btc||chart',
					'dcr-2' => 'bittrex||usdt||none',
					'dcr-3' => 'binance||btc||both',
					'dcr-4' => 'kucoin||btc||chart',
					'dcr-5' => 'kucoin||eth||none',
					
					
					// LTC
					'ltc' => 'bittrex||btc||chart',
					'ltc-2' => 'bittrex||eth||none',
					'ltc-3' => 'binance||usdt||both',
					'ltc-4' => 'binance||eth||none',
					'ltc-5' => 'binance_us||btc||none',
					
					
					//TUSD
					'tusd' => 'binance||usdt||both',
					'tusd-2' => 'bittrex||btc||none',
					
					
					//DAI
					'dai' => 'coinbase||usdc||both',
					'dai-2' => 'kraken||usd||both',
					'dai-3' => 'bittrex||btc||chart',
					
					
					// ATOM
					'atom-2' => 'kraken||btc||chart',
					'atom-3' => 'binance||btc||both',
					'atom-5' => 'binance||usdc||none',
					'atom-6' => 'bittrex_global||btc||chart',
					'atom-7' => 'okex||btc||chart',
					'atom-8' => 'okex||eth||none',
					
					
					// ANT
					'ant' => 'bittrex_global||btc||both',
					'ant-2' => 'hitbtc||btc||chart',
					'ant-3' => 'ethfinex||btc||none',
					
					
					// MANA
					'mana' => 'bittrex||btc||chart',
					'mana-2' => 'binance||btc||both',
					'mana-3' => 'kucoin||btc||chart',
					'mana-4' => 'ethfinex||btc||none',
					
					
					// DOGE
					'doge' => 'bittrex||btc||chart',
					'doge-2' => 'binance||btc||both',
					'doge-3' => 'binance_us||usdt||none',
					'doge-4' => 'kraken||btc||none',
					
					
					// GNT
					'gnt' => 'bittrex||btc||both',
					'gnt-2' => 'ethfinex||btc||chart',
					
					
					// DATA
					'data' => 'hitbtc||btc||chart',
					'data-2' => 'binance||btc||chart',
					
					
					// HIVE
					'hive' => 'bittrex||btc||both',
					
					
					// KDA
					'kda' => 'hotbit||btc||both',
					'kda-2' => 'coinex||btc||chart',
					
					
					// GRIN
					'grin-2' => 'bittrex_global||btc||chart',
					'grin-3' => 'gateio||usdt||none',
					'grin-4' => 'kucoin||btc||both',
					'grin-5' => 'hitbtc||btc||chart',
					'grin-6' => 'hotbit||btc||none',
					
					
					// HNS
					'hns' => 'namebase||btc||both',
					
					
					//MYST
					'myst' => 'hitbtc||btc||both',
					'myst-2' => 'hitbtc||eth||none',
					'myst-3' => 'idex||eth||none',
					
					
					);
					
// END $app_config['charts_alerts']['tracked_markets']


////////////////////////////////////////
// !END! CHART AND PRICE ALERT CONFIGURATION
////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
// !START! POWER USER CONFIGURATION (ADJUST WITH CARE, OR YOU CAN BREAK THE APP!)
/////////////////////////////////////////////////////////////////////////////


// The maximum number of data points allowed in each lite chart (to speed up page / chart loading times)
$app_config['power_user']['chart_data_points_max'] = '365'; // (default = '365')


// 'on' verifies ALL SMTP server certificates for secure SMTP connections, 'off' verifies NOTHING 
// Set to 'off' if the SMTP server has an invalid certificate setup (which stops email sending, but you still want to send email through that server)
$app_config['power_user']['smtp_strict_ssl'] = 'off'; // (DEFAULT IS 'off', TO ASSURE SMTP EMAIL SENDING STILL WORKS THROUGH MISCONFIGURED SMTP SERVERS)


// 'on' verifies ALL REMOTE API server certificates for secure API connections, 'off' verifies NOTHING 
// Set to 'off' if some exchange's API servers have invalid certificates (which stops price data retrieval...but you still want to get price data from them)
$app_config['power_user']['remote_api_strict_ssl'] = 'off'; // (default = 'off')


// Seconds to wait for response from REMOTE API endpoints (exchange data, etc). 
// Set too low you won't get ALL data (partial or zero bytes), set too high the interface can take a long time loading if an API server hangs up
// RECOMMENDED MINIMUM OF 45 FOR INSTALLS BEHIND #LOW BANDWIDTH# / HOME INTERNET NETWORKS 
// (which may need an even higher timeout of 60 or more if data still isn't received from all APIs)
$app_config['power_user']['remote_api_timeout'] = 30; // (default = 30)


// Local / internal API rate limit (maximum of once every X seconds, per ip address) for accepting remote requests
// Can be 0 to disable rate limiting (unlimited)
$app_config['power_user']['local_api_rate_limit'] = 5; // (default = 5)


// Local / internal API market limit (maximum number of markets requested per call)
$app_config['power_user']['local_api_market_limit'] = 20; // (default = 20)


// Local / internal API cache time (minutes that previous requests are cached for)
$app_config['power_user']['local_api_cache_time'] = 4; // (default = 4)


// Minutes to cache real-time exchange price data...can be zero to skip cache, but set to at least 1 minute TO AVOID YOUR IP GETTING BLOCKED
// SOME APIS PREFER THIS SET TO AT LEAST A FEW MINUTES, SO HIGHLY RECOMMENDED TO KEEP FAIRLY HIGH
$app_config['power_user']['last_trade_cache_time'] = 4; // (default = 4)


$app_config['power_user']['chainstats_cache_time'] = 70; // Minutes to cache blockchain stats (for mining calculators). Set high initially, it can be strict


$app_config['power_user']['marketcap_cache_time'] = 40; // Minutes to cache marketcap rankings...start high and test lower, it can be strict


// Number of marketcap rankings to request from API.
// 250 rankings is a safe maximum to start with, to avoid getting your API requests throttled / blocked
$app_config['power_user']['marketcap_ranks_max'] = 250;


// Minutes to cache RSS feeds (for News page)
// Randomly cache each RSS feed between the minimum and maximum minutes set here (so they don't refresh all at once, for faster load times)
// THE WIDER THE GAP BETWEEN THE NUMBERS, MORE SPLIT UP / FASTER THE FEEDS WILL LOAD
$app_config['power_user']['news_feeds_cache_min_max'] = '75,175'; // 'min,max' (default = '75,175')
////
// RSS news feeds available on the News page
$app_config['power_user']['news_feeds'] = array(
    
    					/////////////////////////////////////////////////////
    					// STANDARD RSS #AND# ATOM FORMAT ARE SUPPORTED
    					/////////////////////////////////////////////////////
        
        				'blog_bitcoin_core_org' => array(
            			"title" => "Blog - BitcoinCore.org",
            			"url" => "https://bitcoincore.org/en/rss.xml"
        												),
        
        				'blog_bitcoin_core_org_meetings' => array(
            			"title" => "Blog - BitcoinCore.org Meetings",
            			"url" => "https://bitcoincore.org/en/meetingrss.xml"
        												),
        
        				'blog_bitcoin_core_org_releases' => array(
            			"title" => "Blog - BitcoinCore.org Releases",
            			"url" => "https://bitcoincore.org/en/releasesrss.xml"
        												),
        
        				'blog_bitcoin_core_org_security' => array(
            			"title" => "Blog - BitcoinCore.org Security",
            			"url" => "https://bitcoincore.org/en/announcements.xml"
        												),
        
        				'blog_blockstream_engineering' => array(
            			"title" => "Blog - Blockstream Engineering",
            			"url" => "https://medium.com/feed/blockstream"
        												),
        
        				'blog_coinbase' => array(
            			"title" => "Blog - Coinbase",
            			"url" => "https://medium.com/feed/the-coinbase-blog"
        												),
        
        				'blog_enterprise_ethereum_alliance' => array(
            			"title" => "Blog - Enterprise Ethereum Alliance",
            			"url" => "https://entethalliance.org/feed/"
        												),
        
        				'blog_ethereum_org' => array(
            			"title" => "Blog - Ethereum.org",
            			"url" => "https://blog.ethereum.org/feed.xml"
        												),
        
        				'blog_ethereum_eips_last_call' => array(
            			"title" => "Blog - Ethereum EIPs (Last Call Review)",
            			"url" => "https://eips.ethereum.org/last-call.xml"
        												),
    
        				'blog_kraken' => array(
            			"title" => "Blog - Kraken",
            			"url" => "https://blog.kraken.com/feed/"
        													),
    
        				'blog_kraken_news' => array(
            			"title" => "Blog - Kraken News",
            			"url" => "https://blog.kraken.com/post/category/kraken-news/feed/"
        													),
    
        				'blog_kraken_market_reports' => array(
            			"title" => "Blog - Kraken Market Reports",
            			"url" => "https://blog.kraken.com/post/category/market-reports/feed"
        													),
        
        				'news_bitcoinist' => array(
            			"title" => "News - Bitcoinist",
            			"url" => "http://bitcoinist.net/feed/"
        												),
        
        				'news_bitcoin_magazine' => array(
            			"title" => "News - Bitcoin Magazine",
            			"url" => "https://bitcoinmagazine.com/feed"
        												),
    					
        				'news_bitcoin_optech' => array(
            			"title" => "News - Bitcoin Optech",
            			"url" => "https://bitcoinops.org/feed.xml"
        													),
        
        				'news_btc_manager' => array(
            			"title" => "News - BTC Manager",
            			"url" => "https://btcmanager.com/feed/"
        												),
        
        				'news_coin_desk' => array(
            			"title" => "News - CoinDesk",
            			"url" => "https://coindesk.com/feed?x=1"
        											),
        
        				'news_coin_telegraph' => array(
            			"title" => "News - CoinTelegraph",
            			"url" => "https://cointelegraph.com/feed"
        												),
    
        				'news_token_daily' => array(
            			"title" => "News - Token Daily",
            			"url" => "https://www.tokendaily.co/rss"
        													),
    
        				'news_whats_new_in_eth2' => array(
            			"title" => "News - What's New In Eth2",
            			"url" => "http://benjaminion.xyz/newineth2/rss_feed.xml"
        													),
    
        				'news_week_in_ethereum' => array(
            			"title" => "News - Week In Ethereum",
            			"url" => "https://weekinethereumnews.com/feed/"
        													),
        
        				'podcast_blockchain_insider' => array(
            			"title" => "Podcast - Blockchain Insider",
            			"url" => "https://feeds.fireside.fm/bifeed/rss"
        												),
    
        				'podcast_into_the_ether' => array(
            			"title" => "Podcast - Into the Ether",
            			"url" => "https://podcast.ethhub.io/rss"
        													),
    
        				'podcast_lets_talk_bitcoin' => array(
            			"title" => "Podcast - Let's Talk Bitcoin",
            			"url" => "https://letstalkbitcoin.com/rss/feed/blog"
        													),
        
        				'podcast_pov_crypto' => array(
            			"title" => "Podcast - POV Crypto",
            			"url" => "http://povcryptopod.libsyn.com/rss"
        												),
    					
        				'podcast_unchained_podcast' => array(
            			"title" => "Podcast - Unchained",
            			"url" => "https://unchained.libsyn.com/unchained"
        													),
    
        				'podcast_what_bitcoin_did' => array(
            			"title" => "Podcast - What Bitcoin Did",
            			"url" => "https://www.whatbitcoindid.com/podcast?format=RSS"
        													),
    
        				'podcast_zero_knowledge' => array(
            			"title" => "Podcast - Zero Knowledge",
            			"url" => "https://feeds.fireside.fm/zeroknowledge/rss"
        													),
    
        				'reddit_bitcoin' => array(
            			"title" => "Reddit - Bitcoin (top)",
            			"url" => "https://www.reddit.com/r/Bitcoin/top/.rss?format=xml"
        													),
    
        				'reddit_cryptocurrency' => array(
            			"title" => "Reddit - CryptoCurrency (top)",
            			"url" => "https://www.reddit.com/r/CryptoCurrency/top/.rss?format=xml"
        													),
    
        				'reddit_cryptomarkets' => array(
            			"title" => "Reddit - CryptoMarkets (top)",
            			"url" => "https://www.reddit.com/r/CryptoMarkets/top/.rss?format=xml"
        													),
    
        				'reddit_ethereum' => array(
            			"title" => "Reddit - Ethereum (top)",
            			"url" => "https://www.reddit.com/r/Ethereum/top/.rss?format=xml"
        													),
    
        				'reddit_gpumining' => array(
            			"title" => "Reddit - GPUMining (top)",
            			"url" => "https://www.reddit.com/r/gpumining/top/.rss?format=xml"
        													),
    
        				'stackexchange_bitcoin' => array(
            			"title" => "StackExchange - Bitcoin (hot)",
            			"url" => "https://bitcoin.stackexchange.com/feeds/hot"
        													),
    
        				'stackexchange_ethereum' => array(
            			"title" => "StackExchange - Ethereum (hot)",
            			"url" => "https://ethereum.stackexchange.com/feeds/hot"
        													),
        
        
    						);
     
							
							
// Activate support for ALTCOIN PAIRED MARKETS (like doge/eth, dai/eth, etc)
// EACH ALTCOIN LISTED HERE !MUST HAVE! AN EXISTING 'btc' MARKET (within 'market_pairing') 
// in it's $app_config['portfolio_assets'] listing (further down in this config file) TO PROPERLY ACTIVATE
// TRY TO #NOT# ADD STABLECOINS HERE, ATTEMPT TO USE $app_config['power_user']['bitcoin_currency_markets'] INSTEAD (TO AUTO-CLIP UNEEDED DECIMAL POINTS IN THE UI)
$app_config['power_user']['crypto_pairing'] = array(
						//'lowercase_altcoin_abrv' => 'CRYPTO_SYMBOL',
						'eth' => 'Ξ ',
						'ltc' => 'Ł ',
						'xmr' => 'ɱ ',
							);



// Preferred ALTCOIN PAIRED MARKETS market(s) for getting a certain crypto's value
// EACH ALTCOIN LISTED HERE MUST EXIST IN $app_config['power_user']['crypto_pairing'] ABOVE,
// AND !MUST HAVE! AN EXISTING 'btc' MARKET (within 'market_pairing') in it's 
// $app_config['portfolio_assets'] listing (further down in this config file),
// AND #THE EXCHANGE NAME MUST BE IN THAT 'btc' LIST#
// #USE VERY LIBERALLY#, AS YOU WANT THE BEST PRICE DISCOVERY FOR THIS CRYPTO'S VALUE
$app_config['power_user']['crypto_pairing_preferred_markets'] = array(
						//'lowercase_btc_market_or_stablecoin_pairing' => 'PREFERRED_MARKET',
							'eth' => 'binance',  // WAY MORE volume , WAY BETTER price discovery than ALL alternatives
							'ltc' => 'binance',  // WAY MORE volume , WAY BETTER price discovery than ALL alternatives
							'xmr' => 'binance',  // WAY MORE volume , WAY BETTER price discovery than ALL alternatives
							);



// Activate support for PRIMARY CURRENCY MARKETS (to use as your preferred local currency in the app)
// EACH CURRENCY LISTED HERE !MUST HAVE! AN EXISTING BITCOIN ASSET MARKET (within 'market_pairing') 
// in Bitcoin's $app_config['portfolio_assets'] listing (further down in this config file) TO PROPERLY ACTIVATE
// (CAN BE A CRYPTO, !AS LONG AS THERE IS A PAIRING CONFIGURED WITHIN THE BITCOIN ASSET SETUP!)
$app_config['power_user']['bitcoin_currency_markets'] = array(
						//'lowercase_btc_market_or_stablecoin_pairing' => 'CURRENCY_SYMBOL',
						'aed' => 'د.إ',
						'ars' => 'ARS$',
						'aud' => 'A$',
						'bam' => 'KM ',
						'bdt' => '৳',
						'bob' => 'Bs ',
						'brl' => 'R$',
						'bwp' => 'P ',
						'byn' => 'Br ',
						'cad' => 'C$',
						'chf' => 'CHf ',
						'clp' => 'CLP$',
						'cny' => 'C¥',
						'cop' => 'Col$',
						'crc' => '₡',
						'czk' => 'Kč ',
						'dai' => 'Đ ',
						'dkk' => 'Kr. ',
						'dop' => 'RD$',
						'egp' => 'ج.م',
						'eth' => 'Ξ ',
						'eur' => '€',
						'gbp' => '£',
						'gel' => 'ლ',
						'ghs' => 'GH₵',
						'gtq' => 'Q ',
						'hkd' => 'HK$',
						'huf' => 'Ft ',
						'idr' => 'Rp ',
						'ils' => '₪',
						'inr' => '₹',
						'irr' => '﷼',
						'jmd' => 'JA$',
						'jod' => 'د.ا',
						'jpy' => 'J¥',
						'kes' => 'Ksh ',
						'krw' => '₩',
						'kwd' => 'د.ك',
						'kzt' => '₸',
						'lkr' => 'රු, ரூ',
						'ltc' => 'Ł ',
						'mad' => 'د.م.',
						'mur' => '₨ ',
						'mwk' => 'MK ',
						'mxn' => 'Mex$',
						'myr' => 'RM ',
						'ngn' => '₦',
						'nis' => '₪',
						'nok' => 'kr ',
						'nzd' => 'NZ$',
						'pab' => 'B/. ',
						'pen' => 'S/ ',
						'php' => '₱',
						'pkr' => '₨ ',
						'pln' => 'zł ',
						'pyg' => '₲',
						'qar' => 'ر.ق',
						'ron' => 'lei ',
						'rsd' => 'din ',
						'rub' => '₽',
						'rwf' => 'R₣ ',
						'sar' => '﷼',
						'sek' => 'kr ',
						'sgd' => 'S$',
						'thb' => '฿',
						'try' => '₺',
						'tusd' => 'Ⓢ ',
						'twd' => 'NT$',
						'tzs' => 'TSh ',
						'uah' => '₴',
						'ugx' => 'USh ',
						'usd' => '$',
						'usdc' => 'Ⓢ ',
						'usdt' => '₮ ',
						'uyu' => '$U ',
						'vnd' => '₫',
						'ves' => 'Bs ',
						'xaf' => 'FCFA ',
						'xof' => 'CFA ',
						'zar' => 'R ',
						'zmw' => 'ZK ',
							);



// Preferred BITCOIN market(s) for getting a certain currency's value
// (when other exchanges for this currency have poor api / volume / price discovery / etc)
// EACH CURRENCY LISTED HERE MUST EXIST IN $app_config['power_user']['bitcoin_currency_markets'] ABOVE
// #USE VERY CONSERVATIVELY#, AS YOU'LL BE RECOMMENDING IN THE INTERFACE TO END-USERS TO AVOID USING ANY OTHER MARKETS FOR THIS CURRENCY
$app_config['power_user']['bitcoin_preferred_currency_markets'] = array(
						//'lowercase_btc_market_or_stablecoin_pairing' => 'PREFERRED_MARKET',
							'eur' => 'kraken',  // WAY BETTER api, WAY BETTER price discovery than ALL alternatives
							'dai' => 'kraken',  // WAY MORE reputable than hitBTC
							'chf' => 'localbitcoins',  // WAY MORE volume , WAY BETTER price discovery than ALL alternatives
							'inr' => 'localbitcoins',  // WAY MORE volume , WAY BETTER price discovery than ALL alternatives
							'jpy' => 'localbitcoins',  // WAY MORE reliable than ALL alternatives
							'rub' => 'localbitcoins',  // WAY MORE volume , WAY BETTER price discovery than ALL alternatives
							);



// Static values in ETH for Ethereum subtokens, like during crowdsale periods etc (before exchange listings)
$app_config['power_user']['ethereum_subtoken_ico_values'] = array(
                        'ETHSUBTOKENNAME' => '0.15',
                        'GOLEM' => '0.001',
                        'ARAGON' => '0.01',
                        'DECENTRALAND' => '0.00008',
                        );



// Mining rewards for different crypto networks (to prefill the editable mining calculator forms)
$app_config['power_user']['mining_rewards'] = array(
					'btc' => '12.5',
					'doge' => '10000',
					'dcr' => 'PLACEHOLDER',  // WE DYNAMICALLY UPDATE THIS IN INIT.PHP
					'eth' => '2',
					'grin' => '60',
					'ltc' => '12.5',
					'xmr' => 'PLACEHOLDER',  // WE DYNAMICALLY UPDATE THIS IN INIT.PHP
					);
                        


// Weeks to power down all HIVE Power holdings
$app_config['power_user']['hive_powerdown_time'] = 13; 
////
// HIVE Power yearly interest rate START 11/29/2019 (1.2%, decreasing every year by roughly 0.075% until it hits a minimum of 0.075% and stays there)
// 1.2 (DO NOT INCLUDE PERCENT SIGN) the first year at 11/29/2019 refactored rates, see above for manual yearly adjustment
$app_config['power_user']['hivepower_yearly_interest'] = 1.2;


// Activate any custom cron plugins you've created (that runs during cron jobs, from the /cron-plugins/ directory)
// SEE /DOCUMENTATION-ETC/CRON-PLUGINS-README.txt for creating your own custom cron plugins
// REMOVE ANY DOUBLE FORWARD SLASHES FROM IN FRONT OF THE PLUGIN YOU WANT ACTIVATED
// ADD ANY NEW CRON PLUGIN HERE BY USING THE FOLDER NAME THE NEW PLUGIN IS LOCATED IN
// NEVER ADD A CRON PLUGIN SOMEBODY ELSE WROTE, UNLESS YOU OR SOMEONE YOU TRUST 
// HAVE REVIEWED THE CODE AND ARE ABSOLUTELY SURE IT IS NOT MALICIOUS!!
$app_config['power_user']['activate_cron_plugins'] = array(
						//'PLUGIN_FOLDER_NAME', // (your plugin folder in /cron-plugins/)
						//'hns-airdrop',  // HNS Airdrop example plugin (detects when you receive HNS tokens at a new / unused address)
						//'recurring-reminder',  // Recurring Reminder example plugin (remind yourself every X days to do something)
							);


// Configuration for the CAPTCHA image on all admin login / reset pages
$app_config['power_user']['captcha_permitted_chars'] = 'ACEFMNPRXY3478'; // Characters allowed for use in captcha image (default = 'ACEFMNPRXY3478')
////
$app_config['power_user']['captcha_chars_length'] = 6; // Number of characters in captcha image (default = 6)
////
$app_config['power_user']['captcha_image_width'] = 430; // Image width (default = 430)
////
$app_config['power_user']['captcha_image_height'] = 130; // Image height (default = 130)
////
$app_config['power_user']['captcha_text_size'] = 50; // Text size (default = 50)
////
$app_config['power_user']['captcha_text_margin'] = 4; // MINIMUM margin of text from edge of image (approximate / average) (default = 4)
////
// Contrast of text against background...0 for default, positive for extra contrast, negative for less contrast (maximum of +-35)
$app_config['power_user']['captcha_text_contrast'] = 0; // example: -5 or 5 (default = 0)


////////////////////////////////////////
// !END! POWER USER CONFIGURATION
////////////////////////////////////////


/////////////////////////////////////////////////////////////////////////////
// !START! DEVELOPER-ONLY CONFIGURATION, !CHANGE WITH #EXTREME# CARE, OR YOU CAN BREAK THE APP!
/////////////////////////////////////////////////////////////////////////////


// $app_config['developer']['debug_mode'] enabled runs unit tests during ui runtimes (during webpage load),
// errors detected are error-logged and printed as alerts in footer
// It also logs ui / cron runtime telemetry to /cache/logs/debugging.log, AND /cache/logs/debugging/
////////////////////////////////////////////////////////////////////////////////////////////
// 'off' (disables), 'all' (all debugging), 'charts' (chart/price alert checks),
// 'texts' (mobile gateway checks), 'markets' (coin market checks),
// 'telemetry' (logs in-app telemetries), 'stats' (basic hardware / software / runtime stats),
// 'btc_markets_config' (the current Bitcoin markets configuration),
// 'smtp' (smtp email server response logging, if smtp emailing is enabled),
// 'api_live_only' (log only live API requests, not cache requests),
// 'api_cache_only' (log only cache requests for API data, not live API requests),
// 'lite_chart_only' (log only lite chart caching routines)
////////////////////////////////////////////////////////////////////////////////////////////
// UNIT TESTS WILL ONLY RUN DURING WEB PAGE LOAD. MAY REQUIRE SETTING MAXIMUM ALLOWED 
// PHP EXECUTION TIME TO 120 SECONDS TEMPORARILY, FOR ALL UNIT TESTS TO FULLY COMPLETE RUNNING, 
// IF YOU GET AN ERROR 500. OPTIONALLY, TRY RUNNING ONE TEST PER PAGE LOAD, TO AVOID THIS.
// DON'T LEAVE DEBUGGING ENABLED AFTER USING IT, THE /cache/logs/debugging.log AND /cache/logs/debugging/
// LOG FILES !CAN GROW VERY QUICKLY IN SIZE! EVEN AFTER JUST A FEW RUNTIMES
$app_config['developer']['debug_mode'] = 'off'; 


// Level of detail / verbosity in log files. 'normal' logs minimal details (basic information), 
// 'verbose' logs maximum details (additional information IF AVAILABLE, for heavy debugging / tracing / etc)
// IF DEBUGGING IS ENABLED ABOVE, LOGS ARE AUTOMATICALLY VERBOSE #WITHOUT THE NEED TO ADJUST THIS SETTING#
$app_config['developer']['log_verbosity'] = 'normal'; // 'normal' / 'verbose'
////
// Keep logs X days before purging (fully deletes logs every X days). Start low (especially when using proxies)
$app_config['developer']['log_purge'] = 10; 


// Maximum execution time for interface runtime in seconds (how long it's allowed to run before automatically killing the process)
// (ALL execution times are automatically 350 IN DEBUG MODE)
$app_config['developer']['ui_max_execution_time'] = 100; // (default = 100)


// Maximum execution time for cron job runtime in seconds (how long it's allowed to run before automatically killing the process)
// (ALL execution times are automatically 350 IN DEBUG MODE)
$app_config['developer']['cron_max_execution_time'] = 500; // (default = 500)


// Maximum execution time for webhook runtime in seconds (how long it's allowed to run before automatically killing the process)
// (ALL execution times are automatically 350 IN DEBUG MODE)
$app_config['developer']['webhook_max_execution_time'] = 60; // (default = 60)


// Maximum execution time for API runtime in seconds (how long it's allowed to run before automatically killing the process)
// (ALL execution times are automatically 350 IN DEBUG MODE)
$app_config['developer']['api_max_execution_time'] = 60; // (default = 60)


// If you want to override the default user agent string (sent with API requests, etc)
// Adding a string here automatically enables that as the custom user agent
// LEAVING BLANK '' USES THE DEFAULT USER AGENT LOGIC BUILT-IN TO THIS APP (INCLUDES BASIC SYSTEM CONFIGURATION STATS)
$app_config['developer']['override_user_agent'] = ''; 


// Default charset used
$app_config['developer']['charset_default'] = 'UTF-8'; 
////
// Unicode charset used (if needed)
// UCS-2 is outdated as it only covers 65536 characters of Unicode
// UTF-16BE / UTF-16LE / UTF-16 / UCS-2BE can represent ALL Unicode characters
$app_config['developer']['charset_unicode'] = 'UTF-16'; 


// Cache directories / files and .htaccess / index.php files permissions (CHANGE WITH #EXTREME# CARE, to adjust security for your PARTICULAR setup)
// THESE PERMISSIONS ARE !ALREADY! CALLED THROUGH THE octdec() FUNCTION WITHIN THE APP WHEN USED
// Cache directories permissions
$app_config['developer']['chmod_cache_directories'] = '0777'; // (default = '0777')
////
// Cache files permissions
$app_config['developer']['chmod_cache_files'] = '0666'; // (default = '0666')
////
// .htaccess / index.php index security files permissions
$app_config['developer']['chmod_index_security'] = '0664'; // (default = '0664')
							

// TLD-only (Top Level Domain only, NO SUBDOMAINS) for each API service that requires multiple calls (for each market / data set)
// Used to throttle these market calls a tiny bit (1.15 seconds), so we don't get easily blacklisted
// (ANY EXCHANGES LISTED HERE ARE !NOT! RECOMMENDED TO BE USED AS THE PRIMARY CURRENCY MARKET IN THIS APP,
// AS ON OCCASION THEY CAN BE !UNRELIABLE! IF HIT WITH TOO MANY SEPARATE API CALLS FOR DIFFERENT COINS / ASSETS)
// !MUST BE LOWERCASE!
$app_config['developer']['limited_apis'] = array(
						'bit2c.co.il',
						'bitforex.com',
						'bitflyer.com',
						'bitso.com',
						'bitstamp.net',
						'blockchain.info',
						'btcmarkets.net',
						'coinbase.com',
						'cryptofresh.com',
						'dcrdata.org',
						'dogechain.info',
						'etherscan.io',
						'gemini.com',
						'litecoin.net',
						'okcoin.com',
							);


// TLD-extensions-only (Top Level Domain extensions only, supported in the get_tld_or_ip() function, which removes subdomains for tld checks)
// IF YOU ADD A NEW API, !MAKE SURE IT'S DOMAIN EXTENSION EXISTS HERE!
// (NO LEADING DOTS, !MUST BE LOWERCASE!)
$app_config['developer']['top_level_domain_map'] = array(
					'co',
					'co.il',
					'co.uk',
					'com', 
					'com.au',
					'fm',
					'info',
					'io',
					'market',
					'net',
					'net.au',
					'net.uk',
					'network', // internal / intranet / etc
					'one',
					'org',
					'org.au',
					'org.uk',
					'pro',
					'us',
					'xyz',
					);
							

////////////////////////////////////////
// !END! DEVELOPER-ONLY CONFIGURATION
////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////////
/////////////////// PRIMARY CONFIGURATIONS -END- //////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////////
/////////////////// EMAIL-TO-MOBILE-TEXT CONFIGURATION -START- ////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////


/*

Below are the mobile networks supported by DFD Cryptocoin Value's email-to-mobile-text functionality. 

Using your corresponding "Network Name Key" (case-sensitive) listed below, 
add that EXACT name in this config file further above within the $app_config['comms']['to_mobile_text'] setting as the text network name variable,
to enable email-to-text alerts to your network's mobile phone number.

PLEASE REPORT ANY MISSING / INCORRECT / NON-FUNCTIONAL GATEWAYS HERE, AND I WILL FIX THEM:
https://github.com/taoteh1221/DFD_Cryptocoin_Values/issues
(or you can add / update it yourself right in this configuration, if you know the correct gateway domain name)

*/


// All supported mobile network email-to-text gateway (domain name) configurations
// Network name keys MUST BE LOWERCASE (for reliability / consistency, 
// as these name keys are always called from (forced) lowercase name key lookups)

// SEE /DOCUMENTATION-ETC/CONFIG-EXAMPLE.txt FOR A FULL EXAMPLE OF THE DEFAULT CONFIGURATION (ESPECIALLY IF YOU MESS UP config.php, lol)

// See /DOCUMENTATION-ETC/HELP-FAQ.txt for tips / troubleshooting FAQs.

// TYPOS LIKE MISSED COMMAS / MISSED QUOTES / ETC !!!!WILL BREAK THE APP!!!!, BE CAREFUL EDITING THIS CONFIG FILE

// DUPLICATE NETWORK NAME KEYS --WILL CANCEL EACH OTHER OUT--, !!USE A UNIQUE NAME FOR EACH KEY!!

// WHEN ADDING YOUR OWN GATEWAYS, ONLY INCLUDE THE DOMAIN (THIS APP WILL AUTOMATICALLY FORMAT TO your_phone_number@your_gateway)


$app_config['mobile_network_text_gateways'] = array(
                        
                        
                        // [EXAMPLE]
                        // 'network_name_key' => 'network_gateway1.com',
                        // 'unique_network_name_key' => 'network_gateway2.com',
                        
                        
                        // [NO NETWORK] (when using textbelt / textlocal API instead)
                        'skip_network_name' => NULL,
                        
                        
                        // [INTERNATIONAL]
                        'esendex' => 'echoemail.net',
                        'global_star' => 'msg.globalstarusa.com',
                        
                        
                        // [MISCELLANEOUS COUNTRIES]
                        'beeline' => 'sms.beemail.ru',          // Russia
                        'china_mobile' => '139.com',            // China
                        'claro_pr' => 'vtexto.com',             // Puerto Rico
                        'csl' => 'mgw.mmsc1.hkcsl.com',         // Hong Kong
                        'digicel' => 'digitextdm.com',          // Dominica
                        'emtel' => 'emtelworld.net',            // Mauritius
                        'guyana_tt' => 'sms.cellinkgy.com',     // Guyana
                        'ice' => 'sms.ice.cr',                  // Costa Rica
                        'm1' => 'm1.com.sg',                    // Singapore
                        'mas_movil' => 'cwmovil.com',           // Panama
                        'mobiltel' => 'sms.mtel.net',           // Bulgaria
                        'mobitel' => 'sms.mobitel.lk',          // Sri Lanka
                        'movistar_ar' => 'sms.movistar.net.ar', // Argentina
                        'movistar_uy' => 'sms.movistar.com.uy', // Uruguay
                        'setar' => 'mas.aw',                    // Aruba
                        'sunrise_ch' => 'gsm.sunrise.ch',       // Switzerland
                        'tmobile_hr' => 'sms.t-mobile.hr',      // Croatia
                        'tele2_lv' => 'sms.tele2.lv',           // Latvia
                        'tele2_se' => 'sms.tele2.se',           // Sweden
                        'telcel' => 'itelcel.com',              // Mexico
                        'tmobile_nl' => 'gin.nl',               // Netherlands
                        'vodafone_it' => 'sms.vodafone.it',     // Italy
                        
                        
                        // [AUSTRALIA]
                        'sms_broadcast' => 'send.smsbroadcast.com.au',
                        'sms_central' => 'sms.smscentral.com.au',
                        'sms_pup' => 'smspup.com',
                        'tmobile_au' => 'optusmobile.com.au',
                        'telstra' => 'sms.tim.telstra.com',
                        'ut_box' => 'sms.utbox.net',
                        
                        
                        // [AUSTRIA]
                        'firmen_sms' => 'subdomain.firmensms.at',
                        'tmobile_at' => 'sms.t-mobile.at',
                        
                        
                        // [CANADA]
                        'bell' => 'txt.bell.ca',
                        'bell_mts' => 'text.mts.net',
                        'fido' => 'sms.fido.ca',
                        'koodo' => 'msg.telus.com',
                        'lynx' => 'sms.lynxmobility.com',
                        'pc_telecom' => 'mobiletxt.ca',
                        'rogers_ca' => 'pcs.rogers.com',
                        'sasktel' => 'pcs.sasktelmobility.com',
                        'telus' => 'mms.telusmobility.com',
                        'virgin_ca' => 'vmobile.ca',
                        'wind' => 'txt.windmobile.ca',
                        
                        
                        // [COLUMBIA]
                        'claro_co' => 'iclaro.com.co',
                        'movistar_co' => 'movistar.com.co',
                        
                        
                        // [EUROPE]
                        'tellus_talk' => 'esms.nu',
                        
                        
                        // [FRANCE]
                        'bouygues' => 'mms.bouyguestelecom.fr',
                        'orange_fr' => 'orange.fr',
                        'sfr' => 'sfr.fr',
                        
                        
                        // [GERMANY]
                        'o2' => 'o2online.de',
                        'tmobile_de' => 't-mobile-sms.de',
                        'vodafone_de' => 'vodafone-sms.de',
                        
                        
                        // [ICELAND]
                        'vodafone_is' => 'sms.is',
                        'box_is' => 'box.is',
                        
                        
                        // [INDIA]
                        'aircel' => 'aircel.co.in',
                        'airtel' => 'airtelmail.com',
                        'airtel_kerala' => 'airtelkerala.com',
                        'escotel' => 'escotelmobile.com',
                        
                        
                        // [NEW ZEALAND]
                        'telecom' => 'etxt.co.nz',
                        'vodafone_nz' => 'mtxt.co.nz',
                        
                        
                        // [NORWAY]
                        'sendega' => 'sendega.com',
                        'teletopia' => 'sms.teletopiasms.no',
                        
                        
                        // [SOUTH AFRICA]
                        'mtn' => 'sms.co.za',
                        'vodacom' => 'voda.co.za',
                        
                        
                        // [SPAIN]
                        'esendex' => 'esendex.net',
                        'movistar_es' => 'movistar.net',
                        'vodafone_es' => 'vodafone.es',
                        
                        
                        // [POLAND]
                        'orange_pl' => 'orange.pl',
                        'plus' => 'text.plusgsm.pl',
                        'polkomtel' => 'text.plusgsm.pl',
                        
                        
                        // [UNITED KINGDOM]
                        'media_burst' => 'sms.mediaburst.co.uk',
                        'txt_local' => 'txtlocal.co.uk',
                        'virgin_uk' => 'vxtras.com',
                        'vodafone_uk' => 'vodafone.net',
                        
                        
                        // [UNITED STATES]
                        'alaska_comm' => 'msg.acsalaska.com',
                        'att' => 'txt.att.net',
                        'bluegrass' => 'mms.myblueworks.com',
                        'boost' => 'myboostmobile.com',
                        'cellcom' => 'cellcom.quiktxt.com',
                        'chariton_valley' => 'sms.cvalley.net',
                        'clear_talk' => 'sms.cleartalk.us',
                        'cricket' => 'mms.cricketwireless.net',
                        'cspire' => 'cspire1.com',
                        'gci' => 'mobile.gci.net',
                        'googlefi' => 'msg.fi.google.com',
                        'nextech' => 'sms.ntwls.net',
                        'pioneer' => 'zsend.com',
                        'rogers_us' => 'pcs.rogers.com',
                        'simple_mobile' => 'smtext.com',
                        'southern_linc' => 'page.southernlinc.com',
                        'south_central_comm' => 'rinasms.com',
                        'sprint' => 'messaging.sprintpcs.com',
                        'tmobile_us' => 'tmomail.net',
                        'telus' => 'mms.telusmobility.com',
                        'trac_fone' => 'mmst5.tracfone.com',
                        'union' => 'union-tel.com',
                        'us_cellular' => 'email.uscc.net',
                        'verizon' => 'vtext.com',
                        'viaero' => 'mmsviaero.com',
                        'virgin_us' => 'vmobl.com',
                        'west_central' => 'sms.wcc.net',
                        'xit' => 'sms.xit.net',
                        

); // mobile_network_text_gateways END



///////////////////////////////////////////////////////////////////////////////////////////////
/////////////////// EMAIL-TO-MOBILE-TEXT CONFIGURATION -END- //////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////


///////////////////////////////////////////////////////////////////////////////////////////////
/////////////////// PORTFOLIO ASSETS CONFIGURATION -START- ////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////


// SEE README.txt FOR HOW TO ADD / EDIT / DELETE COINS IN THIS CONFIG

// SEE /DOCUMENTATION-ETC/CONFIG-EXAMPLE.txt FOR A FULL EXAMPLE OF THE DEFAULT CONFIGURATION (ESPECIALLY IF YOU MESS UP config.php, lol)

// See /DOCUMENTATION-ETC/HELP-FAQ.txt for tips / troubleshooting FAQs.

// TYPOS LIKE MISSED COMMAS / MISSED QUOTES / ETC !!!!WILL BREAK THE APP!!!!, BE CAREFUL EDITING THIS CONFIG FILE


$app_config['portfolio_assets'] = array(

                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // BTC
                    'BTC' => array(
                        
                        'asset_name' => 'Bitcoin',
                        'marketcap_website_slug' => 'bitcoin',
                        'market_pairing' => array(
                        
                        				'aed' => array(
                                          'localbitcoins' => 'AED',
                                                    ),
                        
                        				'ars' => array(
                                          'localbitcoins' => 'ARS',
                                                    ),
                        
                        				'aud' => array(
                                    		'btcmarkets' => 'BTC/AUD',
                                          'lakebtc' => 'btcaud',
                                          'localbitcoins' => 'AUD',
                                                    ),
                                                    
                                    'bam' => array(
                                          'localbitcoins' => 'BAM',
                                                    ),
                                                    
                                    'bdt' => array(
                                          'localbitcoins' => 'BDT',
                                                    ),
                                                    
                                    'bob' => array(
                                          'localbitcoins' => 'BOB',
                                                    ),
                                                    
                                    'brl' => array(
                                          'braziliex' => 'btc_brl',
                                          'localbitcoins' => 'BRL',
                                                    ),
                                                    
                                    'bwp' => array(
                                          'localbitcoins' => 'BWP',
                                                    ),
                                                    
                                    'byn' => array(
                                          'localbitcoins' => 'BYN',
                                                    ),
                                                    
                                    'cad' => array(
                                          'kraken' => 'XXBTZCAD',
                                          'lakebtc' => 'btccad',
                                          'localbitcoins' => 'CAD',
                                                    ),
                                                    
                                    'chf' => array(
                                          'lakebtc' => 'btcchf',
                                          'localbitcoins' => 'CHF',
                                                    ),
                                                    
                                    'clp' => array(
                                          'localbitcoins' => 'CLP',
                                                    ),
                                                    
                                    'cny' => array(
                                          'localbitcoins' => 'CNY',
                                                    ),
                                                    
                                    'cop' => array(
                                          'localbitcoins' => 'COP',
                                                    ),
                                                    
                                    'crc' => array(
                                          'localbitcoins' => 'CRC',
                                                    ),
                                                    
                                    'czk' => array(
                                          'localbitcoins' => 'CZK',
                                                    ),
                                                    
                                    'dai' => array(
                                        'hitbtc' => 'BTCDAI',
                                    	 'kraken' => 'XBTDAI',
                                        'okex' => 'BTC-DAI',
                                                    ),
                                                    
                                    'dkk' => array(
                                          'localbitcoins' => 'DKK',
                                                    ),
                                                    
                                    'dop' => array(
                                          'localbitcoins' => 'DOP',
                                                    ),
                                                    
                                    'egp' => array(
                                          'localbitcoins' => 'EGP',
                                                    ),
                                                    
                                    'eth' => array(
                                          'localbitcoins' => 'ETH',
                                                    ),
                                                    
                                    'eur' => array(
                                          'coinbase' => 'BTC-EUR',
                                          'kraken' => 'XXBTZEUR',
                                          'bitstamp' => 'btceur',
                                          'bitpanda' => 'BTC_EUR',
                                          'bitflyer' => 'BTC_EUR',
                                          'coss' => 'BTC-EUR',
                                          'cex' => 'BTC:EUR',
                                          'lakebtc' => 'btceur',
                                          'localbitcoins' => 'EUR',
                                          'luno' => 'XBTEUR',
                                                    ),
                                                    
                                    'gbp' => array(
                                          'coinbase' => 'BTC-GBP',
                                          'bitfinex' => 'tBTCGBP',
                                          'coss' => 'BTC-GBP',
                                          'cex' => 'BTC:GBP',
                                          'lakebtc' => 'btcgbp',
                                          'localbitcoins' => 'GBP',
                                                    ),
                                                    
                                    'gel' => array(
                                          'localbitcoins' => 'GEL',
                                                    ),
                                                    
                                    'ghs' => array(
                                          'localbitcoins' => 'GHS',
                                                    ),
                                                    
                                    'gtq' => array(
                                          'localbitcoins' => 'GTQ',
                                                    ),
                                                    
                                    'hkd' => array(
                                          'tidebit' => 'btchkd',
                                          'localbitcoins' => 'HKD',
                                                    ),
                                                    
                                    'huf' => array(
                                          'localbitcoins' => 'HUF',
                                                    ),
                                                    
                                    'idr' => array(
                                          'localbitcoins' => 'IDR',
                                                    ),
                                                    
                                    'ils' => array(
                                          'localbitcoins' => 'ILS',
                                                    ),
                                                    
                                    'inr' => array(
                                          'localbitcoins' => 'INR',
                                          'bitbns' => 'BTC',
                                          'buyucoin' => 'btc_inr',
                                                    ),
                                                    
                                    'irr' => array(
                                          'localbitcoins' => 'IRR',
                                                    ),
                                                    
                                    'jmd' => array(
                                          'localbitcoins' => 'JMD',
                                                    ),
                                                    
                                    'jod' => array(
                                          'localbitcoins' => 'JOD',
                                                    ),
                                                    
                                    'jpy' => array(
                                          'bitflyer' => 'BTC_JPY',
                                          'lakebtc' => 'btcjpy',
                                          'localbitcoins' => 'JPY',
                                                    ),
                                                    
                                    'kes' => array(
                                          'localbitcoins' => 'KES',
                                                    ),
                                                    
                                    'krw' => array(
                                          'localbitcoins' => 'KRW',
                                          'upbit' => 'KRW-BTC',
                                        	'korbit' => 'btc_krw',
                                                    ),
                                                    
                                    'kwd' => array(
                                          'localbitcoins' => 'KWD',
                                                    ),
                                                    
                                    'kzt' => array(
                                          'localbitcoins' => 'KZT',
                                                    ),
                                                    
                                    'lkr' => array(
                                          'localbitcoins' => 'LKR',
                                                    ),
                                                    
                                    'ltc' => array(
                                          'localbitcoins' => 'LTC',
                                                    ),
                                                    
                                    'mad' => array(
                                          'localbitcoins' => 'MAD',
                                                    ),
                                                    
                                    'mur' => array(
                                          'localbitcoins' => 'MUR',
                                                    ),
                                                    
                                    'mwk' => array(
                                          'localbitcoins' => 'MWK',
                                                    ),
                                                    
                                    'mxn' => array(
                                          'bitso' => 'btc_mxn',
                                          'localbitcoins' => 'MXN',
                                                    ),
                                                    
                                    'myr' => array(
                                          'localbitcoins' => 'MYR',
                                                    ),
                                                    
                                    'ngn' => array(
                                          'localbitcoins' => 'NGN',
                                                    ),
                                                    
                                    'nis' => array(
                                          'bit2c' => 'BtcNis',
                                                    ),
                                                    
                                    'nok' => array(
                                          'localbitcoins' => 'NOK',
                                                    ),
                                                    
                                    'nzd' => array(
                                          'localbitcoins' => 'NZD',
                                                    ),
                                                    
                                    'pab' => array(
                                          'localbitcoins' => 'PAB',
                                                    ),
                                                    
                                    'pen' => array(
                                          'localbitcoins' => 'PEN',
                                                    ),
                                                    
                                    'php' => array(
                                          'localbitcoins' => 'PHP',
                                                    ),
                                                    
                                    'pkr' => array(
                                          'localbitcoins' => 'PKR',
                                                    ),
                                                    
                                    'pln' => array(
                                          'localbitcoins' => 'PLN',
                                                    ),
                                                    
                                    'pyg' => array(
                                          'localbitcoins' => 'PYG',
                                                    ),
                                                    
                                    'qar' => array(
                                          'localbitcoins' => 'QAR',
                                                    ),
                                                    
                                    'ron' => array(
                                          'localbitcoins' => 'RON',
                                                    ),
                                                    
                                    'rsd' => array(
                                          'localbitcoins' => 'RSD',
                                                    ),
                                                    
                                    'rub' => array(
                                          'cex' => 'BTC:RUB',
                                          'localbitcoins' => 'RUB',
                                                    ),
                                                    
                                    'rwf' => array(
                                          'localbitcoins' => 'RWF',
                                                    ),
                                                    
                                    'sar' => array(
                                          'localbitcoins' => 'SAR',
                                                    ),
                                                    
                                    'sek' => array(
                                          'localbitcoins' => 'SEK',
                                                    ),
                                                    
                                    'sgd' => array(
                                          'lakebtc' => 'btcsgd',
                                          'localbitcoins' => 'SGD',
                                                    ),
                                                    
                                    'thb' => array(
                                          'localbitcoins' => 'THB',
                                                    ),
                                                    
                                    'try' => array(
                                          'btcturk' => 'BTCTRY',
                                          'localbitcoins' => 'TRY',
                                                    ),
                                                    
                                    'tusd' => array(
                                          'binance' => 'BTCTUSD',
                                          'zebpay' => 'BTC-TUSD',
                                                    ),
                                                    
                                    'twd' => array(
                                          'localbitcoins' => 'TWD',
                                                    ),
                                                    
                                    'tzs' => array(
                                          'localbitcoins' => 'TZS',
                                                    ),
                                                    
                                    'uah' => array(
                                          'localbitcoins' => 'UAH',
                                                    ),
                                                    
                                    'ugx' => array(
                                          'localbitcoins' => 'UGX',
                                                    ),
                                                    
                                    'usd' => array(
                                          'coinbase' => 'BTC-USD',
                                          'binance_us' => 'BTCUSD',
                                          'bitstamp' => 'btcusd',
                                          'kraken' => 'XXBTZUSD',
                                          'gemini' => 'btcusd',
                                          'localbitcoins' => 'USD',
                                          'bitfinex' => 'tBTCUSD',
                                          'bitflyer' => 'BTC_USD',
                                          'lakebtc' => 'btcusd',
                                          'hitbtc' => 'BTCUSD',
                                          'okcoin' => 'btc_usd',
                                          'livecoin' => 'BTC/USD',
                                          'cex' => 'BTC:USD',
                                          'southxchange' => 'BTC/USD',
                                          'coss' => 'BTC-USD',
                                                    ),
                                                    
                                    'usdc' => array(
                                          'binance' => 'BTCUSDC',
                                        	'korbit' => 'btc_usdc',
                                                    ),
                                                    
                                    'usdt' => array(
                                          'binance' => 'BTCUSDT',
                                          'btcturk' => 'BTCUSDT',
                                          'huobi' => 'btcusdt',
                                          'okex' => 'BTC-USDT',
                                          'bitbns' => 'BTCUSDT',
                                                    ),
                                                    
                                    'uyu' => array(
                                          'localbitcoins' => 'UYU',
                                                    ),
                                                    
                                    'ves' => array(
                                          'localbitcoins' => 'VES',
                                                    ),
                                                    
                                    'vnd' => array(
                                          'localbitcoins' => 'VND',
                                                    ),
                                                    
                                    'xaf' => array(
                                          'localbitcoins' => 'XAF',
                                                    ),
                                                    
                                    'xof' => array(
                                          'localbitcoins' => 'XOF',
                                                    ),
                                                    
                                    'zar' => array(
                                          'localbitcoins' => 'ZAR',
                                          'luno' => 'XBTZAR',
                                                    ),
                                                    
                                    'zmw' => array(
                                          'localbitcoins' => 'ZMW',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // ETH
                    'ETH' => array(
                        
                        'asset_name' => 'Ethereum',
                        'marketcap_website_slug' => 'ethereum',
                        'market_pairing' => array(
                                                    
                                    'brl' => array(
                                          'braziliex' => 'eth_brl',
                                                    ),
                                                    
                                    'btc' => array(
                                          'binance' => 'ETHBTC',
                                          'coinbase' => 'ETH-BTC',
                                          'binance_us' => 'ETHBTC',
                                          'bittrex' => 'BTC-ETH',
                                          'bitstamp' => 'ethbtc',
                                          'gemini' => 'ethbtc',
                                          'kraken' => 'XETHXXBT',
                                          'bitfinex' => 'tETHBTC',
                                          'hitbtc' => 'ETHBTC',
                                          'upbit' => 'BTC-ETH',
                                          'bitflyer' => 'ETH_BTC',
                                          'kucoin' => 'ETH-BTC',
                                          'okex' => 'ETH-BTC',
                                          'livecoin' => 'ETH/BTC',
                                          'poloniex' => 'BTC_ETH',
                                          'cryptofresh' => 'OPEN.ETH',
                                          'bitso' => 'eth_btc',
                                          'braziliex' => 'eth_btc',
                                          'zebpay' => 'ETH-BTC',
                                          'luno' => 'ETHXBT',
                                                    ),
                                                    
                                    'dai' => array(
                                          'coinbase' => 'ETH-DAI',
                                          'hitbtc' => 'ETHDAI',
                                                    ),
                                                    
                                    'eur' => array(
                                          'coinbase' => 'ETH-EUR',
                                          'bitstamp' => 'etheur',
                                          'cex' => 'ETH:EUR',
                                                    ),
                                                    
                                    'gbp' => array(
                                          'coinbase' => 'ETH-GBP',
                                          'cex' => 'BTC:GBP',
                                                    ),
                                                    
                                    'hkd' => array(
                                          'tidebit' => 'ethhkd',
                                                    ),
                                                    
                                    'inr' => array(
                                          'bitbns' => 'ETH',
                                          'buyucoin' => 'eth_inr',
                                                    ),
                                                    
                                    'jpy' => array(
                                          'bitflyer' => 'ETH_JPY',
                                                    ),
                                                    
                                    'krw' => array(
                                          'upbit' => 'KRW-ETH',
                                        	'korbit' => 'eth_krw',
                                                    ),
                                                    
                                    'mxn' => array(
                                          'bitso' => 'eth_mxn',
                                                    ),
                                                    
                                    'nis' => array(
                                          'bit2c' => 'EthNis',
                                                    ),
                                                    
                                    'tusd' => array(
                                          'binance' => 'ETHTUSD',
                                                    ),
                                                    
                                    'try' => array(
                                          'btcturk' => 'ETHTRY',
                                                    ),
                                                    
                                    'usd' => array(
                                          'coinbase' => 'ETH-USD',
                                          'kraken' => 'XETHZUSD',
                                          'bitstamp' => 'ethusd',
                                          'gemini' => 'ethusd',
                                          'bitfinex' => 'tETHUSD',
                                          'okcoin' => 'eth_usd',
                                          'cex' => 'ETH:USD',
                                          'coss' => 'ETH-USD',
                                                    ),
                                                    
                                    'usdt' => array(
                                        	'binance' => 'ETHUSDT',
                                          'btcturk' => 'ETHUSDT',
                                          'huobi' => 'ethusdt',
                                        	'binance_us' => 'ETHUSDT',
                                          'bittrex' => 'USDT-ETH',
                                          'hitbtc' => 'ETHUSD',
                                          'upbit' => 'USDT-ETH',
                                       	'kucoin' => 'ETH-USDT',
                                          'okex' => 'ETH-USDT',
                                          'poloniex' => 'USDT_ETH',
                                          'bitbns' => 'ETHUSDT',
                                                    ),
                                                    
                                    'usdc' => array(
                                          'binance' => 'ETHUSDC',
                                          'coinbase' => 'ETH-USDC',
                                          'kucoin' => 'ETH-USDC',
                                          'poloniex' => 'USDC_ETH',
                                                    ),
                                                    
                                    'zar' => array(
                                          'luno' => 'ETHZAR',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // XMR
                    'XMR' => array(
                        
                        'asset_name' => 'Monero',
                        'marketcap_website_slug' => 'monero',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                        	'binance' => 'XMRBTC',
                                          'huobi' => 'xmrbtc',
                                          'bittrex' => 'BTC-XMR',
                                          'bitfinex' => 'tXMRBTC',
                                          'hitbtc' => 'XMRBTC',
                                          'kraken' => 'XXMRXXBT',
                                        	'upbit' => 'BTC-XMR',
                                          'okex' => 'XMR-BTC',
                                          'poloniex' => 'BTC_XMR',
                                                    ),
                                                    
                                    'eth' => array(
                                        	'binance' => 'XMRETH',
                                          'huobi' => 'xmreth',
                                          'bittrex' => 'ETH-XMR',
                                          'hitbtc' => 'XMRETH',
                                          'upbit' => 'ETH-XMR',
                                                    ),
                                                    
                                    'inr' => array(
                                          'bitbns' => 'XMR',
                                          'buyucoin' => 'xmr_inr',
                                                    ),
                                                    
                                    'usdt' => array(
                                          'huobi' => 'xmrusdt',
                                          'bittrex' => 'USDT-XMR',
                                          'upbit' => 'USDT-XMR',
                                          'okex' => 'XMR-USDT',
                                          'poloniex' => 'USDT_XMR',
                                                    ),
                                                    
                                    'usdc' => array(
                                          'poloniex' => 'USDC_XMR',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // MKR
                    'MKR' => array(
                        
                        'asset_name' => 'Maker',
                        'marketcap_website_slug' => 'maker',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                       	'kucoin' => 'MKR-BTC',
                                          'okex' => 'MKR-BTC',
                                          'bitfinex' => 'tMKRBTC',
                                        	'hitbtc' => 'MKRBTC',
                                          'coss' => 'MKR-BTC',
                                          'coinex' => 'MKRBTC',
                                                    ),
                                                    
                                		'dai' => array(
                                        	'kucoin' => 'MKR-DAI',
                                        	'hitbtc' => 'MKRDAI',
                                                    ),
                                                    
                                		'eth' => array(
                                        	'kucoin' => 'MKR-ETH',
                                          'okex' => 'MKR-ETH',
                                          'bitfinex' => 'tMKRETH',
                                        	'hitbtc' => 'MKRETH',
                                          'gateio' => 'mkr_eth',
                                          'idex' => 'ETH_MKR',
                                          'coss' => 'MKR-ETH',
                                                    ),
                                                    
                                		'krw' => array(
                                        	'korbit' => 'mkr_krw',
                                                    ),
                                                    
                                    'usdt' => array(
                                          'okex' => 'MKR-USDT',
                                        	'hitbtc' => 'MKRUSDT',
                                          'gateio' => 'mkr_usdt',
                                          'coinex' => 'MKRUSDT',
                                          'coss' => 'MKR-USDT',
                                          			),
                                          			
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // DCR
                    'DCR' => array(
                        
                        'asset_name' => 'Decred',
                        'marketcap_website_slug' => 'decred',
                        'market_pairing' => array(
                        
                                    'brl' => array(
                                          'braziliex' => 'dcr_brl'
                                                    ),
                                                    
                                    'btc' => array(
                                        	'binance' => 'DCRBTC',
                                          'bittrex' => 'BTC-DCR',
                                       	'kucoin' => 'DCR-BTC',
                                          'upbit' => 'BTC-DCR',
                                          'okex' => 'DCR-BTC',
                                          'gateio' => 'dcr_btc',
                                          'braziliex' => 'dcr_btc',
                                                    ),
                                                    
                                		'eth' => array(
                                        	'kucoin' => 'DCR-ETH',
                                                    ),
                                                    
                                    'usdt' => array(
                                          'bittrex' => 'USDT-DCR',
                                          'okex' => 'DCR-USDT',
                                          'gateio' => 'dcr_usdt',
                                          			),
                                          			
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // LTC
                    'LTC' => array(
                        
                        'asset_name' => 'Litecoin',
                        'marketcap_website_slug' => 'litecoin',
                        'market_pairing' => array(
                        
                                    'brl' => array(
                                          'braziliex' => 'ltc_brl',
                                                    ),
                                                    
                                    'btc' => array(
                                        'binance' => 'LTCBTC',
                                        'coinbase' => 'LTC-BTC',
                                        'huobi' => 'ltcbtc',
                                        'binance_us' => 'LTCBTC',
                                        'bittrex' => 'BTC-LTC',
                                        'bitstamp' => 'ltcbtc',
                                        'bitfinex' => 'tLTCBTC',
                                        'kraken' => 'XLTCXXBT',
                                        'hitbtc' => 'LTCBTC',
                                        'kucoin' => 'LTC-BTC',
                                        'upbit' => 'BTC-LTC',
                                        'okex' => 'LTC-BTC',
                                        'livecoin' => 'LTC/BTC',
                                        'poloniex' => 'BTC_LTC',
                                        'cryptofresh' => 'OPEN.LTC',
                                        'bitso' => 'ltc_btc',
                                        'braziliex' => 'ltc_btc',
                                        'zebpay' => 'LTC-BTC',
                                                    ),
                                                    
                                    'eth' => array(
                                        'binance' => 'LTCETH',
                                        'bittrex' => 'ETH-LTC',
                                        'hitbtc' => 'LTCETH',
                                        'kucoin' => 'LTC-ETH',
                                        'upbit' => 'ETH-LTC',
                                    	 'okex' => 'LTC-ETH',
                                                    ),
                                                    
                                    'eur' => array(
                                          'coinbase' => 'LTC-EUR',
                                          'bitstamp' => 'ltceur',
                                          'cex' => 'LTC:EUR',
                                                    ),
                                                    
                                    'gbp' => array(
                                          'coinbase' => 'LTC-GBP',
                                          'cex' => 'LTC:GBP',
                                                    ),
                                                    
                                    'inr' => array(
                                          'bitbns' => 'LTC',
                                          'buyucoin' => 'ltc_inr',
                                                    ),
                                                    
                                		'krw' => array(
                                        	'korbit' => 'ltc_krw',
                                                    ),
                                                    
                                    'mxn' => array(
                                          'bitso' => 'ltc_mxn',
                                                    ),
                                                    
                                    'nis' => array(
                                          'bit2c' => 'LtcNis',
                                                    ),
                                          			
                                    'tusd' => array(
                                         'binance' => 'LTCTUSD',
                                                    ),
                                                    
                                    'usd' => array(
                                          'coinbase' => 'LTC-USD',
                                          'kraken' => 'XLTCZUSD',
                                          'bitstamp' => 'ltcusd',
                                          'gemini' => 'ltcusd',
                                          'bitfinex' => 'tLTCUSD',
                                          'okcoin' => 'ltc_usd',
                                          'cex' => 'LTC:USD',
                                                    ),
                                          			
                                    'usdc' => array(
                                         'binance' => 'LTCUSDC',
                                         'poloniex' => 'USDC_LTC',
                                                    ),
                                                    
                                    'usdt' => array(
                                        'binance' => 'LTCUSDT',
                                        'huobi' => 'ltcusdt',
                                        'binance_us' => 'LTCUSDT',
                                        'bittrex' => 'USDT-LTC',
                                        'hitbtc' => 'LTCUSD',
                                        'kucoin' => 'LTC-USDT',
                                        'upbit' => 'USDT-LTC',
                                        'okex' => 'LTC-USDT',
                                        'poloniex' => 'USDT_LTC',
                                        'bitbns' => 'LTCUSDT',
                                          			),
                                                    
                                        ) // market_pairing END
                                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // MISCASSETS 
                    // (KEY PLACED HERE FOR ORDERING ONLY, DYNAMICALLY POPULATED BY THE APP AT RUNTIME)
                    'MISCASSETS' => array(), 
                    // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // TUSD
                    'TUSD' => array(
                        
                        'asset_name' => 'True USD',
                        'marketcap_website_slug' => 'true-usd',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                        'bittrex' => 'BTC-TUSD',
                                        'upbit' => 'BTC-TUSD',
                                                    ),
                                                    
                                    'eth' => array(
                                        'bittrex' => 'ETH-TUSD',
                                        'upbit' => 'ETH-TUSD',
                                                    ),
                                                    
                                    'usdt' => array(
                                    	 'binance' => 'TUSDUSDT',
                                        'bittrex' => 'USDT-TUSD',
                                                    ),
                                                    
                                        ) // market_pairing END
                                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // DAI
                    'DAI' => array(
                        
                        'asset_name' => 'Dai',
                        'marketcap_website_slug' => 'dai',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                        'bittrex' => 'BTC-DAI',
                                        'upbit' => 'BTC-DAI',
                                        'bitfinex' => 'tDAIBTC',
                                                    ),
                                                    
                                    'eth' => array(
                                        'bittrex' => 'ETH-DAI',
                                    	 'bitfinex' => 'tDAIETH',
                                                    ),
                                                    
                                    'eur' => array(
                                    	 'kraken' => 'DAIEUR',
                                                    ),
                                                    
                                    'krw' => array(
                                        	'korbit' => 'dai_krw',
                                                    ),
                                                    
                                    'usd' => array(
                                    	 'kraken' => 'DAIUSD',
                                    	 'bitfinex' => 'tDAIUSD',
                                        'bittrex' => 'USD-DAI',
                                                    ),
                                                    
                                    'usdc' => array(
                                    	 'coinbase' => 'DAI-USDC',
                                        'hitbtc' => 'DAIUSDC',
                                                    ),
                                                    
                                    'usdt' => array(
                                    	 'kraken' => 'DAIUSDT',
                                        'bittrex' => 'USDT-DAI',
                                        'okex' => 'DAI-USDT',
                                                    ),
                                                    
                                        ) // market_pairing END
                                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // ATOM
                    'ATOM' => array(
                        
                        'asset_name' => 'Cosmos',
                        'marketcap_website_slug' => 'cosmos',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                         'binance' => 'ATOMBTC',
                                         'bittrex_global' => 'BTC-ATOM',
                                         'kraken' => 'ATOMXBT',
                                         'okex' => 'ATOM-BTC',
                                         'hotbit' => 'ATOM_BTC',
                                         'poloniex' => 'BTC_ATOM',
                                         'bitforex' => 'coin-btc-atom',
                                                    ),
                                                    
                                    'eth' => array(
                                         'kraken' => 'ATOMETH',
                                         'okex' => 'ATOM-ETH',
                                         'hotbit' => 'ATOM_ETH',
                                         'bitforex' => 'coin-eth-atom',
                                                    ),
                                                    
                                    'usd' => array(
                                         'binance_us' => 'ATOMUSD',
                                                    ),
                                                    
                                    'usdc' => array(
                                         'binance' => 'ATOMUSDC',
                                         'poloniex' => 'USDC_ATOM',
                                                    ),
                                                    
                                    'usdt' => array(
                                         'binance_us' => 'ATOMUSDT',
                                         'hotbit' => 'ATOM_USDT',
                                         'poloniex' => 'USDT_ATOM',
                                         'bitforex' => 'coin-usdt-atom',
                                                    ),
                                                    
                                        ) // market_pairing END
                                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // ANT
                    'ANT' => array(
                        
                        'asset_name' => 'Aragon',
                        'marketcap_website_slug' => 'aragon',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                          'bittrex_global' => 'BTC-ANT',
                                        	'ethfinex' => 'tANTBTC',
                                          'hitbtc' => 'ANTBTC',
                                        	'upbit' => 'BTC-ANT',
                                                    ),
                                                    
                                    'eth' => array(
                                        	'ethfinex' => 'tANTETH',
                                          'upbit' => 'ETH-ANT',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // MANA
                    'MANA' => array(
                        
                        'asset_name' => 'Decentraland',
                        'marketcap_website_slug' => 'decentraland',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                        	'binance' => 'MANABTC',
                                          'bittrex' => 'BTC-MANA',
                                        	'ethfinex' => 'tMNABTC',
                                          'kucoin' => 'MANA-BTC',
                                        	'upbit' => 'BTC-MANA',
                                          'okex' => 'MANA-BTC',
                                          'bitso' => 'mana_btc',
                                          'poloniex' => 'BTC_MANA',
                                                    ),
                                                    
                                    'eth' => array(
                                        	'binance' => 'MANAETH',
                                          'bittrex' => 'ETH-MANA',
                                        	'ethfinex' => 'tMNAETH',
                                          'hitbtc' => 'MANAETH',
                                          'kucoin' => 'MANA-ETH',
                                        	'upbit' => 'ETH-MANA',
                                          'okex' => 'MANA-ETH',
                                                    ),
                                                    
                                    'mxn' => array(
                                          'bitso' => 'mana_mxn',
                                                    ),
                                                    
                                    'usdc' => array(
                                          'coinbase' => 'MANA-USDC',
                                                    ),
                                                    
                                    'usdt' => array(
                                          'hitbtc' => 'MANAUSD',
                                          'okex' => 'MANA-USDT',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // DOGE
                    'DOGE' => array(
                        
                        'asset_name' => 'Dogecoin',
                        'marketcap_website_slug' => 'dogecoin',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                        	'binance' => 'DOGEBTC',
                                        	'kraken' => 'XXDGXXBT',
                                          'bittrex' => 'BTC-DOGE',
                                          'upbit' => 'BTC-DOGE',
                                          'hitbtc' => 'DOGEBTC',
                                          'hotbit' => 'DOGE_BTC',
                                          'gateio' => 'doge_btc',
                                          'livecoin' => 'DOGE/BTC',
                                          'poloniex' => 'BTC_DOGE',
                                                    ),
                                                    
                                    'eth' => array(
                                        	'hotbit' => 'DOGE_ETH',
                                          'hitbtc' => 'DOGEETH',
                                         	'bitforex' => 'coin-eth-doge',
                                                    ),
                                                    
                                    'inr' => array(
                                          'bitbns' => 'DOGE',
                                          'buyucoin' => 'doge_inr',
                                                    ),
                                                    
                                    'usdc' => array(
                                        	'poloniex' => 'USDC_DOGE',
                                                    ),
                                                    
                                    'usdt' => array(
                                        	'binance' => 'DOGEUSDT',
                                        	'binance_us' => 'DOGEUSDT',
                                          'bittrex' => 'USDT-DOGE',
                                          'hitbtc' => 'DOGEUSD',
                                          'okex' => 'DOGE-USDT',
                                          'poloniex' => 'USDT_DOGE',
                                         	'bitforex' => 'coin-usdt-doge',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // GNT
                    'GNT' => array(
                        
                        'asset_name' => 'Golem',
                        'marketcap_website_slug' => 'golem-network-tokens',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                          'bittrex' => 'BTC-GNT',
                                        	'ethfinex' => 'tGNTBTC',
                                        	'upbit' => 'BTC-GNT',
                                        	'livecoin' => 'GNT/BTC',
                                        	'okex' => 'GNT-BTC',
                                          'bitso' => 'gnt_btc',
                                          'poloniex' => 'BTC_GNT',
                                          'braziliex' => 'gnt_btc',
                                          'zebpay' => 'GNT-BTC',
                                                    ),
                                                    
                                    'eth' => array(
                                          'bittrex' => 'ETH-GNT',
                                        	'ethfinex' => 'tGNTETH',
                                          'upbit' => 'ETH-GNT',
                                                    ),
                                                    
                                    'inr' => array(
                                          'bitbns' => 'GNT',
                                          'buyucoin' => 'gnt_inr',
                                                    ),
                                                    
                                    'mxn' => array(
                                          'bitso' => 'gnt_mxn',
                                                    ),
                                                    
                                    'usdc' => array(
                                          'coinbase' => 'GNT-USDC',
                                                    ),
                                                    
                                    'usdt' => array(
                                        	'okex' => 'GNT-USDT',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // DATA
                    'DATA' => array(
                        
                        'asset_name' => 'Streamr DATAcoin',
                        'marketcap_website_slug' => 'streamr-datacoin',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                        'binance' => 'DATABTC',
                                        'ethfinex' => 'tDATBTC',
                                        'hitbtc' => 'DATABTC',
                                                    ),
                                                    
                                    'eth' => array(
                                        'binance' => 'DATAETH',
                                        'ethfinex' => 'tDATETH',
                                  		 'hitbtc' => 'DATAETH',
                                        'gateio' => 'data_eth',
                                        'idex' => 'ETH_DATA',
                                                    ),
                                                    
                                    'usdt' => array(
                                         'hitbtc' => 'DATAUSD',
                                         'gateio' => 'data_usdt',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // HIVE
                    'HIVE' => array(
                        
                        'asset_name' => 'Hive',
                        'marketcap_website_slug' => 'hive-blockchain',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                        'bittrex' => 'BTC-HIVE',
                                        'huobi' => 'hivebtc',
                                        'hotbit' => 'HIVE_BTC',
                                                    ),
                        
                                    'usdt' => array(
                                        'huobi' => 'hiveusdt',
                                        'hotbit' => 'HIVE_USDT',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // KDA
                    'KDA' => array(
                        
                        'asset_name' => 'Kadena',
                        'marketcap_website_slug' => 'kadena',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                         'hotbit' => 'KDA_BTC',
                                         'coinex' => 'KDABTC',
                                                    ),
                                                    
                                    'usdt' => array(
                                         'hotbit' => 'KDA_USDT',
                                         'coinex' => 'KDAUSDT',
                                                    ),
                                                    
                                        ) // market_pairing END
                                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // GRIN
                    'GRIN' => array(
                        
                        'asset_name' => 'Grin',
                        'marketcap_website_slug' => 'grin',
                        'market_pairing' => array( 
                        
                                    'btc' => array(
                                         'bittrex_global' => 'BTC-GRIN',
                                    	  'kucoin' => 'GRIN-BTC',
                                         'hitbtc' => 'GRINBTC',
                                         'hotbit' => 'GRIN_BTC',
                                         'gateio' => 'grin_btc',
                                         'poloniex' => 'BTC_GRIN',
                                         'bitforex' => 'coin-btc-grin',
                                         'tradeogre' => 'BTC-GRIN',
                                         'bigone' => 'GRIN-BTC',
                                                    ),
                                                    
                                    'eth' => array(
                                    	  'kucoin' => 'GRIN-ETH',
                                         'hitbtc' => 'GRINETH',
                                         'hotbit' => 'GRIN_ETH',
                                         'gateio' => 'grin_eth',
                                                    ),
                                                    
                                    'nis' => array(
                                          'bit2c' => 'GrinNis',
                                                    ),
                                                    
                                    'usdc' => array(
                                         'poloniex' => 'USDC_GRIN',
                                                    ),
                                                    
                                    'usdt' => array(
                                    	  'kucoin' => 'GRIN-USDT',
                                         'hitbtc' => 'GRINUSD',
                                         'hotbit' => 'GRIN_USDT',
                                         'gateio' => 'grin_usdt',
                                         'bitforex' => 'coin-usdt-grin',
                                         'bigone' => 'GRIN-USDT',
                                                    ),
                                                    
                                        ) // market_pairing END
                                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // HNS
                    'HNS' => array(
                        
                        'asset_name' => 'Handshake',
                        'marketcap_website_slug' => 'handshake',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                         'namebase' => 'HNSBTC',
                                                    )
                                                    
                                        ) // market_pairing END
                                        
                    ), // Asset END
                    
                    
                    ////////////////////////////////////////////////////////////////////
                    
                    
                    // MYST
                    'MYST' => array(
                        
                        'asset_name' => 'Mysterium',
                        'marketcap_website_slug' => 'mysterium',
                        'market_pairing' => array(
                        
                                    'btc' => array(
                                          'hitbtc' => 'MYSTBTC',
                                                    ),
                                                    
                                    'eth' => array(
                                          'hitbtc' => 'MYSTETH',
                                          'idex' => 'ETH_MYST',
                                                    ),
                                                    
                                        ) // market_pairing END
                        
                    ), // Asset END
                    
                
                    ////////////////////////////////////////////////////////////////////
                
                
); // portfolio_assets END



///////////////////////////////////////////////////////////////////////////////////////////////
/////////////////// PORTFOLIO ASSETS CONFIGURATION -END- //////////////////////////////////////
///////////////////////////////////////////////////////////////////////////////////////////////





